/*
  This is a wrapper for the Adafruit ILI9341 library
  https://github.com/adafruit/ILI9341_t3

  Prints text or built-in icons
*/
#ifndef BMC_ILI9341_H_
#define BMC_ILI9341_H_
#include "utility/BMC-Def.h"

#if BMC_MAX_ILI9341_BLOCKS > 0

#define BMC_ILI_ICON_LENGTH 14

#if !defined(BMC_ILI_RESET_PIN)
  #define BMC_ILI_RESET_PIN 255
#endif


class BMC_ILI9341 {
 public:
  BMC_TFT display;
  BMC_ILI9341():display(10, 9, BMC_ILI_RESET_PIN){}
  
  bool begin(uint8_t rotation=0){
    display.begin();
    display.fillScreen(BMC_ILI9341_BLACK);
    display.setRotation(rotation);
    display.setTextWrap(false);
    renderSplashScreen();
    return true;
  }
  void renderSplashScreen(){
    uint16_t yBase = BMC_TFT_SIZE == 1 ? 0 : 40;

    display.drawRect(0, 0, BMC_TFT_WIDTH, BMC_TFT_HEIGHT, BMC_ILI9341_ORANGE);
    display.drawRect(1, 1, BMC_TFT_WIDTH-2, BMC_TFT_WIDTH-2, BMC_ILI9341_ORANGE);
    drawCompressedImage((BMC_TFT_WIDTH/2)-(logoW/2), yBase+32, logoW, logoH, logo, 2550);
    
    char str[20] = "BMC";
    display.setFont(Arial_32_Bold);
    int16_t textWidth = display.strPixelLen(str);
    int16_t x = (BMC_TFT_WIDTH-textWidth) / 2;
    x = (x < 0) ? 0 : x;
    display.setTextColor(BMC_ILI9341_ORANGE);
    display.setCursor(x, yBase+135);
    display.print(str);

    sprintf(str, "Version %u.%u.%u", BMC_VERSION_MAJ, BMC_VERSION_MIN, BMC_VERSION_PATCH);
    display.setFont(Arial_16);
    textWidth = display.strPixelLen(str);
    x = (BMC_TFT_WIDTH-textWidth) / 2;
    x = (x < 0) ? 0 : x;
    display.setTextColor(BMC_ILI9341_GRAY_18);
    display.setCursor(x, yBase+190);
    display.print(str);

    display.setCursor(0, 0);
    display.setFont(BMCLiberationSansNarrow_24);
    display.setTextColor(BMC_ILI9341_WHITE);
  }
  void clear(){
    BMC_PRINTLN("clear display");
    display.fillRect(0, 0, BMC_TFT_WIDTH, BMC_TFT_HEIGHT, BMC_ILI9341_BLACK);
    // display.drawRect(0, 0, BMC_TFT_WIDTH, BMC_TFT_HEIGHT, BMC_ILI9341_ORANGE);
  }
  private:
  void drawCompressedImage(int x, int y, int w, int h, const uint16_t *pic, uint16_t arraySize){
    int lines = 4096 / w;
    int yOffset = 0;
    uint16_t _buffer[lines * w];
    uint16_t j = 0;
    uint16_t p = 0;
    uint16_t c, c1;
    c = ~pic[0];

    auto addPixel = [&](const uint16_t &color) { _buffer[p++] = color; if(p >= lines * w) {display.writeRect(x, yOffset+y, w, lines, _buffer); yOffset += lines; p = 0;} };
    auto changedBits = [](const uint16_t &value) { return ((value & 0x60)<<6) | ((value & 0x1c)<<3) | ((value & 0x03)<<0); };

    while(j < arraySize) {
      c1 = c;
      c = pic[j++];

      addPixel(c);
        
      if(c1 == c) {
        do {
          for(h=0;h<(pic[j]>>8);h++) 
            addPixel(c);
        } while((pic[j++] & 0x00ff) == 0xfe);
      }
      else if((c & 0xe71c) == (c1 & 0xe71c)) {
        while(1) {
          if((pic[j] & 0xff00) == 0xff00) {j++;break;}
          c ^= changedBits((pic[j] & 0xff00) >> 8);
          addPixel(c);
        
          if((pic[j] & 0x00ff) == 0x00ff) {j++;break;}
          c ^= changedBits(pic[j] & 0x00ff);
          addPixel(c);
          
          if(++j >= arraySize) break;
        }
      }
    }
    if(p>0)
      display.writeRect(x, yOffset+y, w, p/w, _buffer); 
  }
    const uint16_t logoW = 80;
    const uint16_t logoH = 80;
    const uint16_t logo[2550] = {
0x0000, 0x0000, 0x1dff, 0x4180, 0x72c0, 0xa400, 0xc4c0, 0xe580, 0xfe60, 0xfe60, 0x06ff, 0xe580, 0xc4c0, 0xa400, 0x72c0, 0x4180, // 0x0010 (16)
0x0000, 0x0000, 0x38ff, 0x3120, 0x72c0, 0xc4c0, 0xfe60, 0xfe60, 0x12ff, 0xc4c0, 0x72c0, 0x20c0, 0x0000, 0x0000, 0x31ff, 0x1060, // 0x0020 (32)
0xff00, 0x72c0, 0xd520, 0xfe60, 0xfe60, 0x03ff, 0xe580, 0xb460, 0x8320, 0x6260, 0x4180, 0x4180, 0x00ff, 0x20c0, 0x0000, 0x0000, // 0x0030 (48)
0x00ff, 0x20c0, 0x4180, 0x4180, 0x00ff, 0x6260, 0x8320, 0xb460, 0xe580, 0xfe60, 0xfe60, 0x03ff, 0xd520, 0x72c0, 0x1060, 0x0000, // 0x0040 (64)
0x0000, 0x00ff, 0x0000, 0x29ff, 0x20c0, 0xa400, 0xfe60, 0xfe60, 0x02ff, 0xe580, 0xa400, 0x5200, 0x1060, 0x0000, 0x0000, 0x00ff, // 0x0050 (80)
0x0000, 0x0bff, 0x1060, 0xff00, 0x5200, 0xa400, 0xe580, 0xfe60, 0xfe60, 0x02ff, 0xa400, 0x20c0, 0x0000, 0x0000, 0x28ff, 0x20c0, // 0x0060 (96)
0xa400, 0xfe60, 0xfe60, 0x01ff, 0xf600, 0xff00, 0xa400, 0x4180, 0x0000, 0x0000, 0x16ff, 0x4180, 0xa400, 0xf600, 0xfe60, 0x0000, // 0x0070 (112)
0xff00, 0xa400, 0x20c0, 0x0000, 0x0000, 0x24ff, 0x1060, 0xff00, 0x8320, 0xfe60, 0xfe60, 0x01ff, 0xe580, 0x8320, 0x1060, 0x0000, // 0x0080 (128)
0x0000, 0x00ff, 0x0000, 0x00ff, 0x1060, 0xff00, 0x5200, 0x0000, 0x0000, 0x0cff, 0x5200, 0x1060, 0x0000, 0x0000, 0x00ff, 0x0000, // 0x0090 (144)
0x00ff, 0x1060, 0xff00, 0x8320, 0xe580, 0xfe60, 0xfe60, 0x01ff, 0x8320, 0x1060, 0x0000, 0x0000, 0x00ff, 0x0000, 0x1eff, 0x4180, // 0x00a0 (160)
0xe580, 0xfe60, 0xfe60, 0x00ff, 0xf600, 0xff00, 0x72c0, 0x0000, 0x0000, 0x03ff, 0x3120, 0x9380, 0xd520, 0xfe60, 0xfe60, 0x00ff, // 0x00b0 (176)
0x0000, 0x0000, 0x0cff, 0xfe60, 0xfe60, 0x00ff, 0xd520, 0x9380, 0x3120, 0x0000, 0x0000, 0x03ff, 0x72c0, 0xf600, 0xfe60, 0x00ff, // 0x00c0 (192)
0xe580, 0x4180, 0x0000, 0x0000, 0x1fff, 0x9380, 0xfe60, 0xfe60, 0x01ff, 0x9380, 0x1060, 0x0000, 0x0000, 0x4cff, 0x72c0, 0xe580, // 0x00d0 (208)
0xfe60, 0xfe60, 0x03ff, 0x0000, 0x0000, 0x0cff, 0xfe60, 0xfe60, 0x03ff, 0xe580, 0x72c0, 0x1060, 0x0000, 0x0000, 0x4cff, 0x9380, // 0x00e0 (224)
0xfe60, 0xfe60, 0x01ff, 0x9380, 0x0000, 0x0000, 0x1cff, 0x20c0, 0xd520, 0xfe60, 0xfe60, 0x00ff, 0xd520, 0x3120, 0x0000, 0x0000, // 0x00f0 (240)
0x01ff, 0x1060, 0xff00, 0x8320, 0xf600, 0xfe60, 0x0000, 0x00ff, 0xfe60, 0x02ff, 0x0000, 0x0000, 0x0cff, 0xfe60, 0xfe60, 0x05ff, // 0x0100 (256)
0xf600, 0xff00, 0x8320, 0x1060, 0x0000, 0x0000, 0xff00, 0x3120, 0xd520, 0xfe60, 0xfe60, 0x00ff, 0xd520, 0x20c0, 0x0000, 0x0000, // 0x0110 (272)
0x19ff, 0x3120, 0xf600, 0xfe60, 0x00ff, 0x9380, 0x0000, 0x0000, 0x02ff, 0x8320, 0xf600, 0xfe60, 0x0000, 0x00ff, 0xfe60, 0x04ff, // 0x0120 (288)
0x0000, 0x0000, 0x0cff, 0xfe60, 0xfe60, 0x07ff, 0xf600, 0xff00, 0x8320, 0x0000, 0x0000, 0x02ff, 0x9380, 0xfe60, 0xfe60, 0x00ff, // 0x0130 (304)
0xf600, 0xff00, 0x3120, 0x0000, 0x0000, 0x17ff, 0x5200, 0xf600, 0xfe60, 0x2cff, 0x6260, 0x0000, 0x0000, 0x01ff, 0x4180, 0xe580, // 0x0140 (320)
0xfe60, 0xfe60, 0x09ff, 0x0000, 0x0000, 0x0cff, 0xfe60, 0xfe60, 0x09ff, 0xe580, 0x4180, 0x0000, 0x0000, 0x01ff, 0x6260, 0xf600, // 0x0150 (336)
0xfe60, 0x2cff, 0x5200, 0x0000, 0x0000, 0x15ff, 0x6260, 0xfe60, 0xfe60, 0x00ff, 0xf600, 0xff00, 0x3120, 0x0000, 0x0000, 0x01ff, // 0x0160 (352)
0x9380, 0xfe60, 0xfe60, 0x0bff, 0x0000, 0x0000, 0x0cff, 0xfe60, 0xfe60, 0x0bff, 0x9380, 0x0000, 0x0000, 0x01ff, 0x3120, 0xf600, // 0x0170 (368)
0xfe60, 0x00ff, 0x6260, 0x0000, 0x0000, 0x13ff, 0x5200, 0xfe60, 0xfe60, 0x00ff, 0xe580, 0x3120, 0x0000, 0x0000, 0x00ff, 0x1060, // 0x0180 (384)
0xff00, 0xd520, 0xfe60, 0xfe60, 0x0cff, 0x0000, 0x0000, 0x0cff, 0xfe60, 0xfe60, 0x0cff, 0xd520, 0x1060, 0x0000, 0x00ff, 0x3120, // 0x0190 (400)
0xe580, 0xfe60, 0xfe60, 0x00ff, 0x5200, 0x0000, 0x0000, 0x11ff, 0x3120, 0xf600, 0xfe60, 0xff00, 0xe580, 0x1060, 0x0000, 0x00ff, // 0x01a0 (416)
0x3120, 0xf600, 0xfe60, 0x0000, 0x00ff, 0xfe60, 0x0aff, 0x0000, 0x0000, 0x0cff, 0xfe60, 0xfe60, 0x0dff, 0xf600, 0xff00, 0x3120, // 0x01b0 (432)
0x0000, 0x0000, 0x00ff, 0x1060, 0xff00, 0xe580, 0xfe60, 0xf600, 0xff00, 0x3120, 0x0000, 0x0000, 0x0fff, 0x20c0, 0xf600, 0xfe60, // 0x01c0 (448)
0x2cff, 0x3120, 0x0000, 0x0000, 0x00ff, 0x3120, 0xf600, 0xfe60, 0x0000, 0x00ff, 0xfe60, 0x0bff, 0x0000, 0x0000, 0x0cff, 0xfe60, // 0x01d0 (464)
0xfe60, 0x0eff, 0xf600, 0xff00, 0x3120, 0x0000, 0x0000, 0x00ff, 0x3120, 0xf600, 0xfe60, 0x2cff, 0x20c0, 0x0000, 0x0000, 0x0eff, // 0x01e0 (480)
0xd520, 0xfe60, 0xf600, 0xff00, 0x3120, 0x0000, 0x0000, 0x00ff, 0x3120, 0xf600, 0xfe60, 0x0000, 0x00ff, 0xfe60, 0x0cff, 0x0000, // 0x01f0 (496)
0x0000, 0x0cff, 0xfe60, 0xfe60, 0x0fff, 0xf600, 0xff00, 0x3120, 0x0000, 0x0000, 0x00ff, 0x3120, 0xf600, 0xfe60, 0xff00, 0xd520, // 0x0200 (512)
0x0000, 0x0000, 0x0dff, 0x9380, 0xfe60, 0xfe60, 0x00ff, 0x6260, 0x0000, 0x0000, 0x00ff, 0x3120, 0xf600, 0xfe60, 0x0000, 0x00ff, // 0x0210 (528)
0xfe60, 0x0dff, 0x0000, 0x0000, 0x0cff, 0xfe60, 0xfe60, 0x10ff, 0xf600, 0xff00, 0x3120, 0x0000, 0x0000, 0x00ff, 0x6260, 0xfe60, // 0x0220 (544)
0xfe60, 0x00ff, 0x9380, 0x0000, 0x0000, 0x0bff, 0x4180, 0xfe60, 0xfe60, 0x00ff, 0x9380, 0x0000, 0x0000, 0x00ff, 0x1060, 0xff00, // 0x0230 (560)
0xf600, 0xfe60, 0x0000, 0x00ff, 0xfe60, 0x0eff, 0x8320, 0x8320, 0x0cff, 0xfe60, 0xfe60, 0x11ff, 0xf600, 0xff00, 0x1060, 0x0000, // 0x0240 (576)
0x00ff, 0x9380, 0xfe60, 0xfe60, 0x00ff, 0x4180, 0x0000, 0x0000, 0x09ff, 0x1060, 0xff00, 0xe580, 0xfe60, 0xd520, 0x0000, 0x0000, // 0x0250 (592)
0x01ff, 0xd520, 0xfe60, 0xfe60, 0x34ff, 0xd520, 0x0000, 0x0000, 0x01ff, 0xd520, 0xfe60, 0xe580, 0x1060, 0x0000, 0x0000, 0x00ff, // 0x0260 (608)
0x0000, 0x05ff, 0x8320, 0xfe60, 0xfe60, 0x00ff, 0x3120, 0x0000, 0x0000, 0x00ff, 0x9380, 0xfe60, 0xfe60, 0x36ff, 0x9380, 0x0000, // 0x0270 (624)
0x0000, 0x00ff, 0x3120, 0xfe60, 0xfe60, 0x00ff, 0x8320, 0x0000, 0x0000, 0x07ff, 0x20c0, 0xfe60, 0xfe60, 0x00ff, 0x9380, 0x0000, // 0x0280 (640)
0x0000, 0x00ff, 0x4180, 0xfe60, 0xfe60, 0x38ff, 0x4180, 0x0000, 0x0000, 0x00ff, 0x9380, 0xfe60, 0xfe60, 0x00ff, 0x20c0, 0x0000, // 0x0290 (656)
0x0000, 0x06ff, 0xa400, 0xfe60, 0xf600, 0xff00, 0x1060, 0x0000, 0x00ff, 0xe580, 0xfe60, 0xfe60, 0x38ff, 0xe580, 0x0000, 0x0000, // 0x02a0 (672)
0x00ff, 0x1060, 0xff00, 0xf600, 0xfe60, 0xff00, 0xa400, 0x0000, 0x0000, 0x05ff, 0x20c0, 0xfe60, 0xfe60, 0x00ff, 0x72c0, 0x0000, // 0x02b0 (688)
0x0000, 0x00ff, 0x8320, 0xfe60, 0xfe60, 0x3aff, 0x8320, 0x0000, 0x0000, 0x00ff, 0x72c0, 0xfe60, 0xfe60, 0x00ff, 0x20c0, 0x0000, // 0x02c0 (704)
0x0000, 0x04ff, 0xa400, 0xfe60, 0xe580, 0x0000, 0x0000, 0x00ff, 0x1060, 0xff00, 0xf600, 0xfe60, 0x0000, 0x00ff, 0xfe60, 0x37ff, // 0x02d0 (720)
0xf600, 0xff00, 0x1060, 0x0000, 0x00ff, 0xe580, 0xfe60, 0xa400, 0x0000, 0x0000, 0x03ff, 0x1060, 0xff00, 0xfe60, 0xfe60, 0x00ff, // 0x02e0 (736)
0x8320, 0x0000, 0x0000, 0x00ff, 0x8320, 0xfe60, 0xfe60, 0x3cff, 0x8320, 0x0000, 0x0000, 0x00ff, 0x8320, 0xfe60, 0xfe60, 0x00ff, // 0x02f0 (752)
0x1060, 0x0000, 0x0000, 0x00ff, 0x72c0, 0xfe60, 0xf600, 0xff00, 0x1060, 0x0000, 0x4cff, 0xf600, 0xfe60, 0x0000, 0x00ff, 0xfe60, // 0x0300 (768)
0x39ff, 0xf600, 0xff00, 0x1060, 0x0000, 0x4cff, 0xf600, 0xfe60, 0xff00, 0x72c0, 0x0000, 0x0000, 0x02ff, 0xd520, 0xfe60, 0xa400, // 0x0310 (784)
0x0000, 0x0000, 0x00ff, 0x72c0, 0xfe60, 0xfe60, 0x3eff, 0x72c0, 0x0000, 0x0000, 0x00ff, 0xa400, 0xfe60, 0xd520, 0x0000, 0x0000, // 0x0320 (800)
0x01ff, 0x20c0, 0xfe60, 0xfe60, 0x00ff, 0x4180, 0x0000, 0x0000, 0x00ff, 0xe580, 0xfe60, 0xfe60, 0x3eff, 0xe580, 0x0000, 0x0000, // 0x0330 (816)
0x00ff, 0x4180, 0xfe60, 0xfe60, 0x00ff, 0x3120, 0x0000, 0x0000, 0x00ff, 0x72c0, 0xfe60, 0xe580, 0x0000, 0x0000, 0x00ff, 0x3120, // 0x0340 (832)
0xfe60, 0xfe60, 0x40ff, 0x3120, 0x0000, 0x0000, 0x00ff, 0xe580, 0xfe60, 0x72c0, 0x0000, 0x0000, 0x00ff, 0xc4c0, 0xfe60, 0xa400, // 0x0350 (848)
0x0000, 0x0000, 0x00ff, 0x9380, 0xfe60, 0xfe60, 0x40ff, 0x9380, 0x0000, 0x0000, 0x00ff, 0xa400, 0xfe60, 0xc4c0, 0x0000, 0x0000, // 0x0360 (864)
0x00ff, 0xfe60, 0xfe60, 0x00ff, 0x5200, 0x0000, 0x0000, 0x00ff, 0xd520, 0xfe60, 0xfe60, 0x40ff, 0xd520, 0x0000, 0x0000, 0x00ff, // 0x0370 (880)
0x5200, 0xfe60, 0xfe60, 0x00ff, 0x0000, 0x4180, 0xfe60, 0xfe60, 0x00ff, 0x1060, 0x0000, 0x4cff, 0xfe60, 0xfe60, 0x42ff, 0x1060, // 0x0380 (896)
0x0000, 0x4cff, 0xfe60, 0xfe60, 0x00ff, 0x4180, 0x72c0, 0xfe60, 0xe580, 0x0000, 0x0000, 0x00ff, 0x5200, 0xfe60, 0xfe60, 0x42ff, // 0x0390 (912)
0x5200, 0x0000, 0x0000, 0x00ff, 0xe580, 0xfe60, 0x72c0, 0xa400, 0xfe60, 0xb460, 0x0000, 0x0000, 0x00ff, 0x8320, 0xfe60, 0xfe60, // 0x03a0 (928)
0x42ff, 0x8320, 0x0000, 0x0000, 0x00ff, 0xb460, 0xfe60, 0xa400, 0xc4c0, 0xfe60, 0x8320, 0x0000, 0x0000, 0x00ff, 0xc4c0, 0xfe60, // 0x03b0 (944)
0xfe60, 0x42ff, 0xc4c0, 0x0000, 0x0000, 0x00ff, 0x8320, 0xfe60, 0xc4c0, 0xe580, 0xfe60, 0x6260, 0x0000, 0x0000, 0x00ff, 0xc4c0, // 0x03c0 (960)
0xfe60, 0xfe60, 0x42ff, 0xc4c0, 0x0000, 0x0000, 0x00ff, 0x6260, 0xfe60, 0xe580, 0xfe60, 0xfe60, 0x00ff, 0x4180, 0x0000, 0x0000, // 0x03d0 (976)
0x00ff, 0xfe60, 0xfe60, 0x14ff, 0xc4c0, 0xd520, 0xfe60, 0xfe60, 0x14ff, 0xd520, 0xc4c0, 0xfe60, 0xfe60, 0x14ff, 0x0000, 0x0000, // 0x03e0 (992)
0x00ff, 0x4180, 0xfe60, 0xfe60, 0x02ff, 0x4180, 0x0000, 0x0000, 0x00ff, 0xfe60, 0xfe60, 0x0eff, 0xc4c0, 0xfe60, 0xfe60, 0x01ff, // 0x03f0 (1008)
0xc4c0, 0x4180, 0x0000, 0x4180, 0xfe60, 0xfe60, 0x14ff, 0x4180, 0x0000, 0x4180, 0xc4c0, 0xfe60, 0xfe60, 0x01ff, 0xc4c0, 0xfe60, // 0x0400 (1024)
0xfe60, 0x0eff, 0x0000, 0x0000, 0x00ff, 0x4180, 0xfe60, 0xfe60, 0x02ff, 0x3120, 0x0000, 0x0000, 0x00ff, 0xfe60, 0xfe60, 0x0cff, // 0x0410 (1040)
0xa400, 0x1060, 0x0000, 0x00ff, 0x6260, 0x4180, 0x0000, 0x0000, 0x02ff, 0xc4c0, 0xfe60, 0xfe60, 0x12ff, 0xc4c0, 0x0000, 0x0000, // 0x0420 (1056)
0x02ff, 0x4180, 0x6260, 0x0000, 0x0000, 0x00ff, 0x1060, 0xff00, 0xa400, 0xfe60, 0xfe60, 0x0cff, 0x0000, 0x0000, 0x00ff, 0x3120, // 0x0430 (1072)
0xfe60, 0xfe60, 0x02ff, 0x0000, 0x0000, 0x01ff, 0xfe60, 0xfe60, 0x0bff, 0xb460, 0x0000, 0x0000, 0x07ff, 0x6260, 0xe580, 0xfe60, // 0x0440 (1088)
0xfe60, 0x12ff, 0xe580, 0x6260, 0x0000, 0x0000, 0x07ff, 0xb460, 0xfe60, 0xfe60, 0x0bff, 0x0000, 0x0000, 0x01ff, 0xfe60, 0xfe60, // 0x0450 (1104)
0x02ff, 0x0000, 0x0000, 0x01ff, 0xfe60, 0xfe60, 0x0bff, 0x4180, 0x0000, 0x0000, 0x05ff, 0x6260, 0xe580, 0xfe60, 0xfe60, 0x16ff, // 0x0460 (1120)
0xe580, 0x6260, 0x0000, 0x0000, 0x05ff, 0x4180, 0xfe60, 0xfe60, 0x0bff, 0x0000, 0x0000, 0x01ff, 0xfe60, 0xfe60, 0x02ff, 0x20c0, // 0x0470 (1136)
0x0000, 0x0000, 0x00ff, 0xfe60, 0xfe60, 0x0aff, 0xc4c0, 0x0000, 0x0000, 0x05ff, 0xc4c0, 0xfe60, 0xfe60, 0x1aff, 0xc4c0, 0x0000, // 0x0480 (1152)
0x0000, 0x05ff, 0xc4c0, 0xfe60, 0xfe60, 0x0aff, 0x0000, 0x0000, 0x00ff, 0x3120, 0xfe60, 0xfe60, 0x02ff, 0x4180, 0x0000, 0x0000, // 0x0490 (1168)
0x00ff, 0xfe60, 0xfe60, 0x08ff, 0xc4c0, 0x4180, 0x0000, 0x0000, 0x05ff, 0x1060, 0xff00, 0xfe60, 0xfe60, 0x1cff, 0x1060, 0x0000, // 0x04a0 (1184)
0x0000, 0x00ff, 0x0000, 0x02ff, 0x4180, 0xc4c0, 0xfe60, 0xfe60, 0x08ff, 0x0000, 0x0000, 0x00ff, 0x4180, 0xfe60, 0xfe60, 0x02ff, // 0x04b0 (1200)
0x4180, 0x0000, 0x0000, 0x00ff, 0xfe60, 0xfe60, 0x06ff, 0xe580, 0x4180, 0x0000, 0x0000, 0x07ff, 0xa400, 0xfe60, 0xfe60, 0x1cff, // 0x04c0 (1216)
0xa400, 0x0000, 0x0000, 0x07ff, 0x4180, 0xe580, 0xfe60, 0xfe60, 0x06ff, 0x0000, 0x0000, 0x00ff, 0x4180, 0xfe60, 0xfe60, 0x00ff, // 0x04d0 (1232)
0xe580, 0xfe60, 0x6260, 0x0000, 0x0000, 0x00ff, 0xc4c0, 0xfe60, 0xfe60, 0x06ff, 0x20c0, 0x0000, 0x0000, 0x01ff, 0x6260, 0xb460, // 0x04e0 (1248)
0x5200, 0x1060, 0x3120, 0xb460, 0xfe60, 0xfe60, 0x1eff, 0xb460, 0x3120, 0x1060, 0x5200, 0xb460, 0x6260, 0x0000, 0x0000, 0x01ff, // 0x04f0 (1264)
0x20c0, 0xfe60, 0xfe60, 0x06ff, 0xc4c0, 0x0000, 0x0000, 0x00ff, 0x6260, 0xfe60, 0xe580, 0xc4c0, 0xfe60, 0x8320, 0x0000, 0x0000, // 0x0500 (1280)
0x00ff, 0xc4c0, 0xfe60, 0xfe60, 0x06ff, 0xa400, 0x0000, 0x6260, 0xe580, 0xfe60, 0xfe60, 0x2aff, 0xe580, 0x6260, 0x0000, 0xa400, // 0x0510 (1296)
0xfe60, 0xfe60, 0x06ff, 0xc4c0, 0x0000, 0x0000, 0x00ff, 0x8320, 0xfe60, 0xc4c0, 0xa400, 0xfe60, 0xb460, 0x0000, 0x0000, 0x00ff, // 0x0520 (1312)
0x8320, 0xfe60, 0xfe60, 0x07ff, 0xe580, 0xfe60, 0xfe60, 0x0eff, 0xe580, 0xfe60, 0xfe60, 0x0cff, 0xe580, 0xfe60, 0xfe60, 0x0eff, // 0x0530 (1328)
0xe580, 0xfe60, 0xfe60, 0x07ff, 0x8320, 0x0000, 0x0000, 0x00ff, 0xb460, 0xfe60, 0xa400, 0x72c0, 0xfe60, 0xe580, 0x0000, 0x0000, // 0x0540 (1344)
0x00ff, 0x5200, 0xfe60, 0xfe60, 0x17ff, 0x6260, 0x1060, 0xd520, 0xfe60, 0xfe60, 0x0aff, 0xd520, 0x1060, 0x6260, 0xfe60, 0xfe60, // 0x0550 (1360)
0x17ff, 0x5200, 0x0000, 0x0000, 0x00ff, 0xe580, 0xfe60, 0x72c0, 0x4180, 0xfe60, 0xfe60, 0x00ff, 0x1060, 0x0000, 0x4cff, 0xfe60, // 0x0560 (1376)
0xfe60, 0x16ff, 0x6260, 0x0000, 0x0000, 0x00ff, 0x1060, 0xff00, 0xe580, 0xfe60, 0xfe60, 0x08ff, 0xe580, 0x1060, 0x0000, 0x00ff, // 0x0570 (1392)
0x6260, 0xfe60, 0xfe60, 0x16ff, 0x1060, 0x0000, 0x4cff, 0xfe60, 0xfe60, 0x00ff, 0x4180, 0x0000, 0xfe60, 0xfe60, 0x00ff, 0x5200, // 0x0580 (1408)
0x0000, 0x0000, 0x00ff, 0xd520, 0xfe60, 0xfe60, 0x12ff, 0xc4c0, 0xf600, 0x6260, 0x0000, 0x0000, 0x01ff, 0x6260, 0xfe60, 0xfe60, // 0x0590 (1424)
0x0aff, 0x6260, 0x0000, 0x0000, 0x01ff, 0x6260, 0xf600, 0xc4c0, 0xfe60, 0xfe60, 0x12ff, 0xd520, 0x0000, 0x0000, 0x00ff, 0x5200, // 0x05a0 (1440)
0xfe60, 0xfe60, 0x00ff, 0x0000, 0x0000, 0x00ff, 0xc4c0, 0xfe60, 0xa400, 0x0000, 0x0000, 0x00ff, 0x9380, 0xfe60, 0xfe60, 0x10ff, // 0x05b0 (1456)
0x8320, 0x1060, 0x0000, 0x0000, 0x00ff, 0x0000, 0x00ff, 0x6260, 0xfe60, 0xfe60, 0x0cff, 0x6260, 0x0000, 0x0000, 0x03ff, 0x1060, // 0x05c0 (1472)
0xff00, 0x8320, 0xfe60, 0xfe60, 0x10ff, 0x9380, 0x0000, 0x0000, 0x00ff, 0xa400, 0xfe60, 0xc4c0, 0x0000, 0x0000, 0x00ff, 0x72c0, // 0x05d0 (1488)
0xfe60, 0xe580, 0x0000, 0x0000, 0x00ff, 0x3120, 0xfe60, 0xfe60, 0x0fff, 0xa400, 0x0000, 0x0000, 0x04ff, 0x6260, 0xfe60, 0xfe60, // 0x05e0 (1504)
0x04ff, 0x8320, 0x0000, 0x0000, 0x00ff, 0x8320, 0xfe60, 0xfe60, 0x04ff, 0x6260, 0x0000, 0x0000, 0x04ff, 0xa400, 0xfe60, 0xfe60, // 0x05f0 (1520)
0x0fff, 0x3120, 0x0000, 0x0000, 0x00ff, 0xe580, 0xfe60, 0x72c0, 0x0000, 0x0000, 0x00ff, 0x3120, 0xfe60, 0xfe60, 0x00ff, 0x4180, // 0x0600 (1536)
0x0000, 0x0000, 0x00ff, 0xe580, 0xfe60, 0xfe60, 0x0eff, 0x3120, 0x0000, 0x0000, 0x04ff, 0xfe60, 0xfe60, 0x05ff, 0x8320, 0x0000, // 0x0610 (1552)
0x0000, 0x00ff, 0x8320, 0xfe60, 0xfe60, 0x05ff, 0x0000, 0x0000, 0x04ff, 0x3120, 0xfe60, 0xfe60, 0x0eff, 0xe580, 0x0000, 0x0000, // 0x0620 (1568)
0x00ff, 0x4180, 0xfe60, 0xfe60, 0x00ff, 0x20c0, 0x0000, 0x0000, 0x01ff, 0xd520, 0xfe60, 0xa400, 0x0000, 0x0000, 0x00ff, 0x72c0, // 0x0630 (1584)
0xfe60, 0xfe60, 0x0eff, 0x0000, 0x0000, 0x05ff, 0xf600, 0xfe60, 0x0000, 0x00ff, 0xfe60, 0x01ff, 0x8320, 0x0000, 0x0000, 0x00ff, // 0x0640 (1600)
0x8320, 0xfe60, 0xfe60, 0x04ff, 0xf600, 0xff00, 0x0000, 0x0000, 0x05ff, 0xfe60, 0xfe60, 0x0eff, 0x72c0, 0x0000, 0x0000, 0x00ff, // 0x0650 (1616)
0xa400, 0xfe60, 0xd520, 0x0000, 0x0000, 0x02ff, 0x72c0, 0xfe60, 0xf600, 0xff00, 0x1060, 0x0000, 0x4cff, 0xf600, 0xfe60, 0x0000, // 0x0660 (1632)
0x00ff, 0xfe60, 0x0aff, 0x3120, 0x0000, 0x0000, 0x03ff, 0x20c0, 0xfe60, 0xfe60, 0x05ff, 0x8320, 0x0000, 0x0000, 0x00ff, 0x8320, // 0x0670 (1648)
0xfe60, 0xfe60, 0x05ff, 0x20c0, 0x0000, 0x0000, 0x03ff, 0x3120, 0xfe60, 0xfe60, 0x0dff, 0xf600, 0xff00, 0x1060, 0x0000, 0x4cff, // 0x0680 (1664)
0xf600, 0xfe60, 0xff00, 0x72c0, 0x0000, 0x0000, 0x02ff, 0x1060, 0xff00, 0xfe60, 0xfe60, 0x00ff, 0x8320, 0x0000, 0x0000, 0x00ff, // 0x0690 (1680)
0x8320, 0xfe60, 0xfe60, 0x0cff, 0x6260, 0x0000, 0x0000, 0x04ff, 0xb460, 0xfe60, 0xfe60, 0x05ff, 0x8320, 0x0000, 0x0000, 0x00ff, // 0x06a0 (1696)
0x8320, 0xfe60, 0xfe60, 0x05ff, 0xb460, 0x0000, 0x0000, 0x04ff, 0x6260, 0xfe60, 0xfe60, 0x0cff, 0x8320, 0x0000, 0x0000, 0x00ff, // 0x06b0 (1712)
0x8320, 0xfe60, 0xfe60, 0x00ff, 0x1060, 0x0000, 0x0000, 0x00ff, 0x0000, 0x00ff, 0xa400, 0xfe60, 0xe580, 0x0000, 0x0000, 0x00ff, // 0x06c0 (1728)
0x1060, 0xff00, 0xf600, 0xfe60, 0x0000, 0x00ff, 0xfe60, 0x07ff, 0x6260, 0x0000, 0x0000, 0x01ff, 0x3120, 0x4180, 0x5200, 0xc4c0, // 0x06d0 (1744)
0xfe60, 0xfe60, 0x05ff, 0xd520, 0x1060, 0x0000, 0x004c, 0xff00, 0xd520, 0xfe60, 0xfe60, 0x05ff, 0xc4c0, 0x5200, 0x4180, 0x3120, // 0x06e0 (1760)
0x0000, 0x0000, 0x01ff, 0x6260, 0xfe60, 0xfe60, 0x0aff, 0xf600, 0xff00, 0x1060, 0x0000, 0x00ff, 0xe580, 0xfe60, 0xa400, 0x0000, // 0x06f0 (1776)
0x0000, 0x04ff, 0x20c0, 0xfe60, 0xfe60, 0x00ff, 0x72c0, 0x0000, 0x0000, 0x00ff, 0x8320, 0xfe60, 0xfe60, 0x09ff, 0x6260, 0x0000, // 0x0700 (1792)
0x0000, 0x01ff, 0x6260, 0xfe60, 0xfe60, 0x08ff, 0xe580, 0x1060, 0x0000, 0x0000, 0x00ff, 0x1060, 0xff00, 0xe580, 0xfe60, 0xfe60, // 0x0710 (1808)
0x08ff, 0x6260, 0x0000, 0x0000, 0x01ff, 0x6260, 0xfe60, 0xfe60, 0x09ff, 0x8320, 0x0000, 0x0000, 0x00ff, 0x72c0, 0xfe60, 0xfe60, // 0x0720 (1824)
0x00ff, 0x20c0, 0x0000, 0x0000, 0x05ff, 0xa400, 0xfe60, 0xf600, 0xff00, 0x1060, 0x0000, 0x00ff, 0xe580, 0xfe60, 0xfe60, 0x08ff, // 0x0730 (1840)
0x6260, 0x0000, 0x0000, 0x00ff, 0x6260, 0xfe60, 0xfe60, 0x09ff, 0x9380, 0x0000, 0x0000, 0x04ff, 0x9380, 0xfe60, 0xfe60, 0x09ff, // 0x0740 (1856)
0x6260, 0x0000, 0x0000, 0x00ff, 0x6260, 0xfe60, 0xfe60, 0x08ff, 0xe580, 0x0000, 0x0000, 0x00ff, 0x1060, 0xff00, 0xf600, 0xfe60, // 0x0750 (1872)
0xff00, 0xa400, 0x0000, 0x0000, 0x06ff, 0x20c0, 0xfe60, 0xfe60, 0x00ff, 0x9380, 0x0000, 0x0000, 0x00ff, 0x4180, 0xfe60, 0xfe60, // 0x0760 (1888)
0x09ff, 0x6260, 0x6260, 0x00ff, 0xfe60, 0xfe60, 0x0aff, 0x8320, 0x0000, 0x0000, 0x04ff, 0x8320, 0xfe60, 0xfe60, 0x0aff, 0x6260, // 0x0770 (1904)
0x6260, 0x00ff, 0xfe60, 0xfe60, 0x09ff, 0x4180, 0x0000, 0x0000, 0x00ff, 0x9380, 0xfe60, 0xfe60, 0x00ff, 0x20c0, 0x0000, 0x0000, // 0x0780 (1920)
0x07ff, 0x8320, 0xfe60, 0xfe60, 0x00ff, 0x3120, 0x0000, 0x0000, 0x00ff, 0x9380, 0xfe60, 0xfe60, 0x16ff, 0xc4c0, 0x0000, 0x0000, // 0x0790 (1936)
0x04ff, 0xc4c0, 0xfe60, 0xfe60, 0x16ff, 0x9380, 0x0000, 0x0000, 0x00ff, 0x3120, 0xfe60, 0xfe60, 0x00ff, 0x8320, 0x0000, 0x0000, // 0x07a0 (1952)
0x08ff, 0x1060, 0xff00, 0xe580, 0xfe60, 0xd520, 0x0000, 0x0000, 0x01ff, 0xd520, 0xfe60, 0xfe60, 0x16ff, 0x6260, 0x0000, 0x0000, // 0x07b0 (1968)
0x02ff, 0x6260, 0xfe60, 0xfe60, 0x16ff, 0xd520, 0x0000, 0x0000, 0x01ff, 0xd520, 0xfe60, 0xe580, 0x1060, 0x0000, 0x0000, 0x00ff, // 0x07c0 (1984)
0x0000, 0x06ff, 0x4180, 0xfe60, 0xfe60, 0x00ff, 0x9380, 0x0000, 0x0000, 0x00ff, 0x1060, 0xff00, 0xf600, 0xfe60, 0x0000, 0x00ff, // 0x07d0 (2000)
0xfe60, 0x13ff, 0x6260, 0x0000, 0x0000, 0x00ff, 0x6260, 0xfe60, 0xfe60, 0x16ff, 0xf600, 0xff00, 0x1060, 0x0000, 0x00ff, 0x9380, // 0x07e0 (2016)
0xfe60, 0xfe60, 0x00ff, 0x4180, 0x0000, 0x0000, 0x0bff, 0x9380, 0xfe60, 0xfe60, 0x00ff, 0x6260, 0x0000, 0x0000, 0x00ff, 0x3120, // 0x07f0 (2032)
0xf600, 0xfe60, 0x0000, 0x00ff, 0xfe60, 0x12ff, 0x8320, 0x0000, 0x0000, 0x00ff, 0x8320, 0xfe60, 0xfe60, 0x15ff, 0xf600, 0xff00, // 0x0800 (2048)
0x3120, 0x0000, 0x0000, 0x00ff, 0x6260, 0xfe60, 0xfe60, 0x00ff, 0x9380, 0x0000, 0x0000, 0x0dff, 0xd520, 0xfe60, 0xf600, 0xff00, // 0x0810 (2064)
0x3120, 0x0000, 0x0000, 0x00ff, 0x3120, 0xf600, 0xfe60, 0x0000, 0x00ff, 0xfe60, 0x11ff, 0x8320, 0x0000, 0x0000, 0x00ff, 0x8320, // 0x0820 (2080)
0xfe60, 0xfe60, 0x14ff, 0xf600, 0xff00, 0x3120, 0x0000, 0x0000, 0x00ff, 0x3120, 0xf600, 0xfe60, 0xff00, 0xd520, 0x0000, 0x0000, // 0x0830 (2096)
0x0eff, 0x20c0, 0xf600, 0xfe60, 0x2cff, 0x3120, 0x0000, 0x0000, 0x00ff, 0x3120, 0xf600, 0xfe60, 0x0000, 0x00ff, 0xfe60, 0x10ff, // 0x0840 (2112)
0x8320, 0x0000, 0x0000, 0x00ff, 0x8320, 0xfe60, 0xfe60, 0x13ff, 0xf600, 0xff00, 0x3120, 0x0000, 0x0000, 0x00ff, 0x3120, 0xf600, // 0x0850 (2128)
0xfe60, 0x2cff, 0x20c0, 0x0000, 0x0000, 0x0fff, 0x3120, 0xf600, 0xfe60, 0xff00, 0xe580, 0x1060, 0x0000, 0x00ff, 0x3120, 0xf600, // 0x0860 (2144)
0xfe60, 0x0000, 0x00ff, 0xfe60, 0x0fff, 0x8320, 0x0000, 0x0000, 0x00ff, 0x8320, 0xfe60, 0xfe60, 0x12ff, 0xf600, 0xff00, 0x3120, // 0x0870 (2160)
0x0000, 0x0000, 0x00ff, 0x1060, 0xff00, 0xf600, 0xfe60, 0x2cff, 0x3120, 0x0000, 0x0000, 0x11ff, 0x5200, 0xfe60, 0xfe60, 0x00ff, // 0x0880 (2176)
0xe580, 0x3120, 0x0000, 0x0000, 0x00ff, 0x1060, 0xff00, 0xd520, 0xfe60, 0xfe60, 0x11ff, 0xe580, 0xc4c0, 0xc4c0, 0x00ff, 0xe580, // 0x0890 (2192)
0xfe60, 0xfe60, 0x11ff, 0xd520, 0x1060, 0x0000, 0x00ff, 0x3120, 0xf600, 0xfe60, 0x00ff, 0x5200, 0x0000, 0x0000, 0x13ff, 0x6260, // 0x08a0 (2208)
0xfe60, 0xfe60, 0x00ff, 0xf600, 0xff00, 0x3120, 0x0000, 0x0000, 0x01ff, 0x9380, 0xfe60, 0xfe60, 0x26ff, 0x9380, 0x0000, 0x0000, // 0x08b0 (2224)
0x01ff, 0x3120, 0xf600, 0xfe60, 0x00ff, 0x6260, 0x0000, 0x0000, 0x15ff, 0x5200, 0xf600, 0xfe60, 0x2cff, 0x6260, 0x0000, 0x0000, // 0x08c0 (2240)
0x01ff, 0x4180, 0xe580, 0xfe60, 0xfe60, 0x22ff, 0xe580, 0x4180, 0x0000, 0x0000, 0x01ff, 0x6260, 0xf600, 0xfe60, 0x2cff, 0x5200, // 0x08d0 (2256)
0x0000, 0x0000, 0x17ff, 0x3120, 0xf600, 0xfe60, 0x00ff, 0x9380, 0x0000, 0x0000, 0x02ff, 0x8320, 0xf600, 0xfe60, 0x0000, 0x00ff, // 0x08e0 (2272)
0xfe60, 0x1bff, 0xf600, 0xff00, 0x8320, 0x0000, 0x0000, 0x02ff, 0x9380, 0xfe60, 0xfe60, 0x00ff, 0xf600, 0xff00, 0x3120, 0x0000, // 0x08f0 (2288)
0x0000, 0x19ff, 0x20c0, 0xd520, 0xfe60, 0xfe60, 0x00ff, 0xd520, 0x3120, 0x0000, 0x0000, 0x01ff, 0x1060, 0xff00, 0x8320, 0xf600, // 0x0900 (2304)
0xfe60, 0x0000, 0x00ff, 0xfe60, 0x17ff, 0xf600, 0xff00, 0x8320, 0x1060, 0x0000, 0x0000, 0xff00, 0x3120, 0xd520, 0xfe60, 0xfe60, // 0x0910 (2320)
0x00ff, 0xd520, 0x20c0, 0x0000, 0x0000, 0x1cff, 0x9380, 0xfe60, 0xfe60, 0x01ff, 0x9380, 0x1060, 0x0000, 0x0000, 0x4cff, 0x72c0, // 0x0920 (2336)
0xe580, 0xfe60, 0xfe60, 0x16ff, 0xe580, 0x72c0, 0x1060, 0x0000, 0x0000, 0x4cff, 0x9380, 0xfe60, 0xfe60, 0x01ff, 0x9380, 0x0000, // 0x0930 (2352)
0x0000, 0x1fff, 0x4180, 0xe580, 0xfe60, 0xfe60, 0x00ff, 0xf600, 0xff00, 0x72c0, 0x0000, 0x0000, 0x03ff, 0x3120, 0x9380, 0xd520, // 0x0940 (2368)
0xfe60, 0xfe60, 0x10ff, 0xd520, 0x9380, 0x3120, 0x0000, 0x0000, 0x03ff, 0x72c0, 0xf600, 0xfe60, 0x00ff, 0xe580, 0x4180, 0x0000, // 0x0950 (2384)
0x0000, 0x21ff, 0x1060, 0xff00, 0x8320, 0xfe60, 0xfe60, 0x01ff, 0xe580, 0x8320, 0x1060, 0x0000, 0x0000, 0x00ff, 0x0000, 0x00ff, // 0x0960 (2400)
0x1060, 0xff00, 0x5200, 0x8320, 0xc4c0, 0xc4c0, 0x00ff, 0xfe60, 0xfe60, 0x06ff, 0xc4c0, 0xc4c0, 0x00ff, 0x8320, 0x5200, 0x1060, // 0x0970 (2416)
0x0000, 0x0000, 0x00ff, 0x0000, 0x00ff, 0x1060, 0xff00, 0x8320, 0xe580, 0xfe60, 0xfe60, 0x01ff, 0x8320, 0x1060, 0x0000, 0x0000, // 0x0980 (2432)
0x00ff, 0x0000, 0x21ff, 0x20c0, 0xa400, 0xfe60, 0xfe60, 0x01ff, 0xf600, 0xff00, 0xa400, 0x4180, 0x0000, 0x0000, 0x16ff, 0x4180, // 0x0990 (2448)
0xa400, 0xf600, 0xfe60, 0x0000, 0xff00, 0xa400, 0x20c0, 0x0000, 0x0000, 0x28ff, 0x20c0, 0xa400, 0xfe60, 0xfe60, 0x02ff, 0xe580, // 0x09a0 (2464)
0xa400, 0x5200, 0x1060, 0x0000, 0x0000, 0x00ff, 0x0000, 0x0bff, 0x1060, 0xff00, 0x5200, 0xa400, 0xe580, 0xfe60, 0xfe60, 0x02ff, // 0x09b0 (2480)
0xa400, 0x20c0, 0x0000, 0x0000, 0x2cff, 0x1060, 0xff00, 0x72c0, 0xd520, 0xfe60, 0xfe60, 0x03ff, 0xe580, 0xb460, 0x8320, 0x6260, // 0x09c0 (2496)
0x4180, 0x4180, 0x00ff, 0x3120, 0x0000, 0x0000, 0x00ff, 0x3120, 0x4180, 0x4180, 0x00ff, 0x6260, 0x8320, 0xb460, 0xe580, 0xfe60, // 0x09d0 (2512)
0xfe60, 0x03ff, 0xd520, 0x72c0, 0x1060, 0x0000, 0x0000, 0x00ff, 0x0000, 0x2eff, 0x20c0, 0x72c0, 0xc4c0, 0xfe60, 0xfe60, 0x12ff, // 0x09e0 (2528)
0xc4c0, 0x72c0, 0x3120, 0x0000, 0x0000, 0x38ff, 0x4180, 0x72c0, 0xa400, 0xc4c0, 0xe580, 0xfe60, 0xfe60, 0x06ff, 0xe580, 0xc4c0, // 0x09f0 (2544)
0xa400, 0x72c0, 0x4180, 0x0000, 0x0000, 0x1eff };
};

#endif

#endif
