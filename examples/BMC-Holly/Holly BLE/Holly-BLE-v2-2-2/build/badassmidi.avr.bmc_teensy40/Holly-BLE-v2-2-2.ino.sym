
/private/var/folders/l0/t3c1vk2x6_1d9rfpkt51t4jr0000gn/T/arduino/sketches/FDF5E801F7CD2E8D12FDD26D89764811/Holly-BLE-v2-2-2.ino.elf:     file format elf32-littlearm

SYMBOL TABLE:
60000000 l    d  .text.headers	00000000 .text.headers
60001400 l    d  .text.code	00000000 .text.code
60001c5c l    d  .text.progmem	00000000 .text.progmem
00000000 l    d  .text.itcm	00000000 .text.itcm
00033e80 l    d  .fini	00000000 .fini
00033e84 l    d  .ARM.exidx	00000000 .ARM.exidx
20000000 l    d  .data	00000000 .data
200056c0 l    d  .bss	00000000 .bss
20200000 l    d  .bss.dma	00000000 .bss.dma
600578d8 l    d  .text.csf	00000000 .text.csf
00000000 l    d  .debug_info	00000000 .debug_info
00000000 l    d  .debug_abbrev	00000000 .debug_abbrev
00000000 l    d  .debug_line	00000000 .debug_line
00000000 l    d  .debug_frame	00000000 .debug_frame
00000000 l    d  .debug_str	00000000 .debug_str
00000000 l    d  .ARM.attributes	00000000 .ARM.attributes
00000000 l    d  .comment	00000000 .comment
00000000 l    d  .debug_loclists	00000000 .debug_loclists
00000000 l    d  .debug_aranges	00000000 .debug_aranges
00000000 l    d  .debug_rnglists	00000000 .debug_rnglists
00000000 l    d  .debug_line_str	00000000 .debug_line_str
00000000 l    df *ABS*	00000000 bootdata.c
00000000 l    df *ABS*	00000000 startup.c
60001400 l     F .text.code	00000016 memory_copy
60001418 l     F .text.code	00000010 memory_clear
60001428 l     F .text.code	000001f8 ResetHandler2
00000000 l    df *ABS*	00000000 WireIMXRT.cpp
00025758 l     F .text.itcm	00000044 _GLOBAL__sub_I__ZN7TwoWire5beginEv
00000000 l    df *ABS*	00000000 analog.c
2000bc81 l     O .bss	00000001 calibrating
00000000 l    df *ABS*	00000000 tempmon.c
2000bab0 l     O .bss	00000004 s_hotCount
2000bab4 l     O .bss	00000004 s_hotTemp
2000bab8 l     O .bss	00000004 s_hot_ROOM
2000babc l     O .bss	00000004 s_roomC_hotC
00000000 l    df *ABS*	00000000 usb.c
0002ade0 l     F .text.itcm	00000088 schedule_transfer
0002ae68 l     F .text.itcm	00000036 run_callbacks
0002aea0 l     F .text.itcm	00000098 endpoint0_transmit.constprop.0
2000ba38 l     O .bss	00000008 endpoint0_buffer
2000ba40 l     O .bss	00000004 endpoint0_notify_mask
2000af28 l     O .bss	00000008 endpoint0_setupdata
2000ba44 l     O .bss	00000004 endpointN_notify_mask
2000ba64 l     O .bss	00000008 reply_buffer
2000bc87 l     O .bss	00000001 sof_usage
2000bc95 l     O .bss	00000001 usb_reboot_timer
00000000 l    df *ABS*	00000000 crti.o
00000000 l    df *ABS*	00000000 crtn.o
00000000 l    df *ABS*	00000000 crtstuff.c
00000020 l     F .text.itcm	00000000 register_tm_clones
00000044 l     F .text.itcm	00000000 frame_dummy
2000ba4c l     O .bss	00000000 object.0
60001c38 l     O .text.code	00000000 __frame_dummy_init_array_entry
00000000 l    df *ABS*	00000000 Holly-BLE-v2-2-2.ino.cpp
000000a4 l     F .text.itcm	00000024 _GLOBAL__sub_I_bmc
00000000 l    df *ABS*	00000000 BMC-ST7735_t3.cpp
00018fe0 l     F .text.itcm	00000024 __tcf_0
00019004 l     F .text.itcm	00000044 _GLOBAL__sub_I__dma_dummy_rx
00000000 l    df *ABS*	00000000 SPI.cpp
00026b94 l     F .text.itcm	00000048 _GLOBAL__sub_I__ZN8SPIClass5beginEv
00000000 l    df *ABS*	00000000 bluetooth.cpp
00026be0 l     F .text.itcm	00000024 _GLOBAL__sub_I_em_rx_tx2
00000000 l    df *ABS*	00000000 joystick.cpp
000280e0 l     F .text.itcm	00000028 _GLOBAL__sub_I_ack_rvd
00000000 l    df *ABS*	00000000 HardwareSerial1.cpp
00029c40 l     F .text.itcm	00000074 _GLOBAL__sub_I_IRQHandler_Serial1
2000b4b8 l     O .bss	00000040 rx_buffer1
2000b538 l     O .bss	00000040 tx_buffer1
20000fd8 l     O .data	00000064 UART6_Hardware
00000000 l    df *ABS*	00000000 HardwareSerial3.cpp
00029cc0 l     F .text.itcm	00000078 _GLOBAL__sub_I_IRQHandler_Serial3
2000b4f8 l     O .bss	00000040 rx_buffer3
2000b578 l     O .bss	00000028 tx_buffer3
20004bb8 l     O .data	00000064 UART2_Hardware
00000000 l    df *ABS*	00000000 BMC.cpp
000027a0 l     F .text.itcm	00000050 BMCDisplay::selectMux(unsigned char) [clone .isra.0]
60001c5c l     O .text.progmem	00000010 BMCGFXFont48pt7b
60001fb4 l     O .text.progmem	0000521a BMCGFXFont48pt7bBitmaps
60001cbc l     O .text.progmem	000002f8 BMCGFXFont48pt7bGlyphs
60001c6c l     O .text.progmem	00000010 BMCGFXFont40pt7b
600074c8 l     O .text.progmem	000037d6 BMCGFXFont40pt7bBitmaps
600071d0 l     O .text.progmem	000002f8 BMCGFXFont40pt7bGlyphs
60001c7c l     O .text.progmem	00000010 BMCGFXFont32pt7b
6000af98 l     O .text.progmem	0000248b BMCGFXFont32pt7bBitmaps
6000aca0 l     O .text.progmem	000002f8 BMCGFXFont32pt7bGlyphs
60001c8c l     O .text.progmem	00000010 BMCGFXFont24pt7b
6000d71c l     O .text.progmem	000014d4 BMCGFXFont24pt7bBitmaps
6000d424 l     O .text.progmem	000002f8 BMCGFXFont24pt7bGlyphs
60001c9c l     O .text.progmem	00000010 BMCGFXFont16pt7b
6000eee8 l     O .text.progmem	00000945 BMCGFXFont16pt7bBitmaps
6000ebf0 l     O .text.progmem	000002f8 BMCGFXFont16pt7bGlyphs
60001cac l     O .text.progmem	00000010 BMCGFXFont10pt7b
6000fb28 l     O .text.progmem	0000039b BMCGFXFont10pt7bBitmaps
6000f830 l     O .text.progmem	000002f8 BMCGFXFont10pt7bGlyphs
20000f18 l     O .data	00000003 CSWTCH.368
00000000 l    df *ABS*	00000000 BMC.events.cpp
00006d14 l     F .text.itcm	00000014 BMCStopwatch::getState() [clone .part.0]
00006d28 l     F .text.itcm	0000002a BMCFas::getBlockChannel(unsigned short) [clone .part.0]
00006d54 l     F .text.itcm	00000058 BMCFas::setPresetNumber(unsigned short) [clone .part.0]
00006dac l     F .text.itcm	00000152 bool BMCDisplayHandlerFas::renderTriangle<BMC_SSD1306>(BMC_SSD1306&, BMCDataContainer, BMCDiplayHandlerData, bool) [clone .isra.0]
00006f00 l     F .text.itcm	00000020 Print::write(char const*) [clone .isra.0]
00006f20 l     F .text.itcm	000000d0 BMCDisplay::generateCrc(BMCDataContainer) [clone .isra.0]
00006ff0 l     F .text.itcm	0000028c bool BMCDisplayHandlerMain::renderSlider<BMC_SSD1306>(BMC_SSD1306&, unsigned short&, unsigned short&, BMCDataContainer, BMCDiplayHandlerData, bool) [clone .isra.0]
00007280 l     F .text.itcm	000003e4 bool BMCDisplayHandlerFas::renderTuner<BMC_SSD1306>(BMC_SSD1306&, BMCTunerData&, BMCDiplayHandlerData, bool) [clone .isra.0]
00009110 l     F .text.itcm	0000004a BMCFas::toggleBlockChannel(unsigned short, unsigned char, unsigned char) [clone .part.0]
0000a320 l     F .text.itcm	00000050 BMCDisplay::selectMux(unsigned char) [clone .isra.0]
0000a6ac l     F .text.itcm	0000015e BMC_OLED::renderLine(char const*, unsigned char, unsigned char, unsigned char, unsigned char, bool) [clone .isra.0]
0000a80c l     F .text.itcm	000001d0 BMC_OLED::print(BMCDataContainer, char*) [clone .isra.0]
6000fec4 l     O .text.progmem	00000010 BMCGFXFont48pt7b
6001021c l     O .text.progmem	0000521a BMCGFXFont48pt7bBitmaps
6000ff24 l     O .text.progmem	000002f8 BMCGFXFont48pt7bGlyphs
6000fed4 l     O .text.progmem	00000010 BMCGFXFont40pt7b
60015730 l     O .text.progmem	000037d6 BMCGFXFont40pt7bBitmaps
60015438 l     O .text.progmem	000002f8 BMCGFXFont40pt7bGlyphs
6000fee4 l     O .text.progmem	00000010 BMCGFXFont32pt7b
60019200 l     O .text.progmem	0000248b BMCGFXFont32pt7bBitmaps
60018f08 l     O .text.progmem	000002f8 BMCGFXFont32pt7bGlyphs
6000fef4 l     O .text.progmem	00000010 BMCGFXFont24pt7b
6001b984 l     O .text.progmem	000014d4 BMCGFXFont24pt7bBitmaps
6001b68c l     O .text.progmem	000002f8 BMCGFXFont24pt7bGlyphs
6000ff04 l     O .text.progmem	00000010 BMCGFXFont16pt7b
6001d150 l     O .text.progmem	00000945 BMCGFXFont16pt7bBitmaps
6001ce58 l     O .text.progmem	000002f8 BMCGFXFont16pt7bGlyphs
6000ff14 l     O .text.progmem	00000010 BMCGFXFont10pt7b
6001dd90 l     O .text.progmem	0000039b BMCGFXFont10pt7bBitmaps
6001da98 l     O .text.progmem	000002f8 BMCGFXFont10pt7bGlyphs
20000f1c l     O .data	00000028 CSWTCH.677
20000fac l     O .data	00000003 CSWTCH.852
00000000 l    df *ABS*	00000000 BMC-SSD1306.cpp
000185d8 l     F .text.itcm	00000088 BMC_SSD1306::drawFastHLineInternal(short, short, short, unsigned short) [clone .part.0]
00018660 l     F .text.itcm	00000160 BMC_SSD1306::drawFastVLineInternal(short, short, short, unsigned short) [clone .part.0]
6001e12c l     O .text.progmem	00000008 BMC_SSD1306::drawFastVLineInternal(short, short, short, unsigned short)::premask
6001e134 l     O .text.progmem	00000008 BMC_SSD1306::drawFastVLineInternal(short, short, short, unsigned short)::postmask
6001e13c l     O .text.progmem	00000005 BMC_SSD1306::display()::dlist1
6001e144 l     O .text.progmem	00000003 BMC_SSD1306::startscrollleft(unsigned char, unsigned char)::scrollList2b
6001e148 l     O .text.progmem	00000003 BMC_SSD1306::startscrollright(unsigned char, unsigned char)::scrollList1b
6001e14c l     O .text.progmem	00000004 BMC_SSD1306::begin(unsigned char, unsigned char)::init1
6001e150 l     O .text.progmem	00000004 BMC_SSD1306::begin(unsigned char, unsigned char)::init2
6001e154 l     O .text.progmem	00000004 BMC_SSD1306::begin(unsigned char, unsigned char)::init3
6001e158 l     O .text.progmem	00000004 BMC_SSD1306::begin(unsigned char, unsigned char)::init4a
6001e15c l     O .text.progmem	00000003 BMC_SSD1306::begin(unsigned char, unsigned char)::init4b
6001e160 l     O .text.progmem	00000003 BMC_SSD1306::begin(unsigned char, unsigned char)::init4c
6001e164 l     O .text.progmem	00000006 BMC_SSD1306::begin(unsigned char, unsigned char)::init5
00000000 l    df *ABS*	00000000 EventResponder.cpp
00000000 l    df *ABS*	00000000 serialEvent1.cpp
00000000 l    df *ABS*	00000000 serialEvent3.cpp
00000000 l    df *ABS*	00000000 usb_desc.c
200051b4 l     O .data	00000012 device_descriptor
200051c8 l     O .data	00000021 seremu_report_desc
6001e380 l     O .text.progmem	0000000a qualifier_descriptor
00000000 l    df *ABS*	00000000 BMC.debug.cpp
00003670 l     F .text.itcm	00000012 Print::println(int) [clone .isra.0]
00003684 l     F .text.itcm	00000020 Print::write(char const*) [clone .isra.0]
000036a4 l     F .text.itcm	00000024 Print::println(char const*) [clone .isra.0]
000036c8 l     F .text.itcm	00000070 BMC::printDebugHeader(char*) [clone .constprop.0]
00000000 l    df *ABS*	00000000 BMC.editor.cpp
20000eb0 l     O .data	00000028 CSWTCH.104
20000ed8 l     O .data	00000040 CSWTCH.106
00000000 l    df *ABS*	00000000 BMC.hardware.auxJacks.cpp
00000000 l    df *ABS*	00000000 BMC.hardware.buttons.cpp
00000000 l    df *ABS*	00000000 BMC.hardware.cpp
20000e70 l     O .data	00000040 CSWTCH.100
20000fb0 l     O .data	00000028 CSWTCH.98
00000000 l    df *ABS*	00000000 BMC.hardware.leds.cpp
00000000 l    df *ABS*	00000000 BMC.hardware.pixels.cpp
00014438 l     F .text.itcm	00000004 BMCPixels::getDefaultColor(unsigned short) [clone .isra.0]
20000f44 l     O .data	00000028 CSWTCH.71
20000f6c l     O .data	00000040 CSWTCH.73
00000000 l    df *ABS*	00000000 BMC.layers.cpp
00014e50 l     F .text.itcm	000002f0 BMC::setLayer(unsigned char, bool, bool) [clone .part.0]
00000000 l    df *ABS*	00000000 BMC.midi.cpp
0001523c l     F .text.itcm	00000078 BMCDawLogicControl::incomingSysEx(BMCMidiMessage) [clone .part.0]
00000000 l    df *ABS*	00000000 BMC.sketchBytes.cpp
00000000 l    df *ABS*	00000000 BMC.sketchStream.cpp
00000000 l    df *ABS*	00000000 BMC.tempoToTap.cpp
00000000 l    df *ABS*	00000000 BMC.timedEvents.cpp
00000000 l    df *ABS*	00000000 BMC.triggers.cpp
00000000 l    df *ABS*	00000000 BMC-ILI9341.cpp
00000000 l    df *ABS*	00000000 BMC-Editor.backup.cpp
00000000 l    df *ABS*	00000000 BMC-Editor.cpp
00019898 l     F .text.itcm	00000428 BMCEditor::storeErase(bool) [clone .isra.0]
00000000 l    df *ABS*	00000000 BMC-Editor.midi.cpp
00000000 l    df *ABS*	00000000 BMC-Editor.midi.global.cpp
0001ac68 l     F .text.itcm	00000028 BMCMidiMessage::appendSysExByte(unsigned char, bool) [clone .isra.0]
0001ac90 l     F .text.itcm	00000020 Print::write(char const*) [clone .isra.0]
0001acb0 l     F .text.itcm	00000024 Print::println(char const*) [clone .isra.0]
0001af24 l     F .text.itcm	00000046 BMCEditor::globalSetTime(bool) [clone .part.0]
0001af6c l     F .text.itcm	00000182 BMCEditor::globalEditorMessenger(bool) [clone .part.0]
0001b0f0 l     F .text.itcm	000000b0 BMCEditor::globalEditorFeedback(bool) [clone .part.0]
0001b21c l     F .text.itcm	00000192 void BMCEditor::deviceResponseData<(unsigned char)1, (unsigned char)16, unsigned char>(bmcStoreDevice<(unsigned char)1, (unsigned char)16, unsigned char>&, BMCMidiMessage&, unsigned short, unsigned char) [clone .isra.0]
0001b3b0 l     F .text.itcm	00000192 void BMCEditor::deviceResponseData<(unsigned char)1, (unsigned char)8, unsigned char>(bmcStoreDevice<(unsigned char)1, (unsigned char)8, unsigned char>&, BMCMidiMessage&, unsigned short, unsigned char) [clone .isra.0]
0001b544 l     F .text.itcm	00000170 void BMCEditor::deviceResponseData<(unsigned char)1, (unsigned char)1, unsigned char>(bmcStoreDevice<(unsigned char)1, (unsigned char)1, unsigned char>&, BMCMidiMessage&, unsigned short, unsigned char) [clone .isra.0]
0001b6b4 l     F .text.itcm	000001b8 void BMCEditor::deviceResponseData<(unsigned char)6, (unsigned char)6, unsigned char>(bmcStoreDevice<(unsigned char)6, (unsigned char)6, unsigned char>&, BMCMidiMessage&, unsigned short, unsigned char) [clone .isra.0]
0001b86c l     F .text.itcm	00000182 void BMCEditor::deviceResponseData<(unsigned char)0, (unsigned char)6, unsigned char>(bmcStoreDevice<(unsigned char)0, (unsigned char)6, unsigned char>&, BMCMidiMessage&, unsigned short, unsigned char) [clone .isra.0]
0001ba64 l     F .text.itcm	00000426 BMCEditor::globalBuildInfoMessage() [clone .part.0]
0001be8c l     F .text.itcm	000000a8 BMCEditor::globalEditorMetrics() [clone .part.0]
0001c02c l     F .text.itcm	00000180 BMCEditor::saveSetListSong(unsigned short) [clone .part.0]
0001c1ac l     F .text.itcm	00000180 BMCEditor::saveSetList(unsigned char) [clone .part.0]
0001c32c l     F .text.itcm	00000180 BMCEditor::saveGlobalButton(unsigned char) [clone .part.0]
0001c4ac l     F .text.itcm	00000170 BMCEditor::saveTempoToTap(unsigned char) [clone .part.0]
0001c61c l     F .text.itcm	0000017c BMCEditor::savePotCalibration(unsigned short) [clone .part.0]
0001c798 l     F .text.itcm	0000017c BMCEditor::saveAuxJack(unsigned char) [clone .part.0]
0001c914 l     F .text.itcm	0000016c BMCEditor::saveTrigger(unsigned char) [clone .part.0]
0001ca80 l     F .text.itcm	0000016c BMCEditor::saveTimedEvent(unsigned char) [clone .part.0]
0001cbec l     F .text.itcm	00000180 BMCEditor::savePreset(unsigned short) [clone .part.0]
0001cd6c l     F .text.itcm	00000180 BMCEditor::saveCustomSysEx(unsigned char) [clone .part.0]
0001ceec l     F .text.itcm	00000170 BMCEditor::saveGlobalLed(unsigned char) [clone .part.0]
0001d800 l     F .text.itcm	0000015a void BMCEditor::incomingMessageDeviceWrite<(unsigned char)1, (unsigned char)8, unsigned char>(bmcStoreDevice<(unsigned char)1, (unsigned char)8, unsigned char>&, unsigned short, short) [clone .isra.0]
0001d95c l     F .text.itcm	00000174 void BMCEditor::incomingMessageDeviceWrite<(unsigned char)1, (unsigned char)16, unsigned char>(bmcStoreDevice<(unsigned char)1, (unsigned char)16, unsigned char>&, unsigned short, short) [clone .isra.0]
0001dad0 l     F .text.itcm	00000164 void BMCEditor::incomingMessageDeviceWrite<(unsigned char)1, (unsigned char)1, unsigned char>(bmcStoreDevice<(unsigned char)1, (unsigned char)1, unsigned char>&, unsigned short, short) [clone .isra.0]
0001dc34 l     F .text.itcm	00000176 void BMCEditor::incomingMessageDeviceWrite<(unsigned char)6, (unsigned char)6, unsigned char>(bmcStoreDevice<(unsigned char)6, (unsigned char)6, unsigned char>&, unsigned short, short) [clone .isra.0]
0001ddac l     F .text.itcm	00000114 void BMCEditor::incomingMessageDeviceWrite<(unsigned char)0, (unsigned char)6, unsigned char>(bmcStoreDevice<(unsigned char)0, (unsigned char)6, unsigned char>&, unsigned short, short) [clone .isra.0]
0001dec0 l     F .text.itcm	0000033c BMCEditor::storeErase(bool) [clone .isra.0]
0001e2bc l     F .text.itcm	000000c8 BMCEditor::globalEditorErase(bool) [clone .part.0]
00000000 l    df *ABS*	00000000 BMC-Editor.midi.layers.cpp
0002208c l     F .text.itcm	000001c8 BMCEditor::layerMessageLayerCopySwap(bool) [clone .part.0]
00000000 l    df *ABS*	00000000 BMC-Editor.midi.utility.cpp
00000000 l    df *ABS*	00000000 BMC-Midi.cpp
00022bfc l     F .text.itcm	000002a0 BMCMidi::sendSysEx(unsigned char, unsigned char*, unsigned short, bool, unsigned char, bool) [clone .part.0]
00022e9c l     F .text.itcm	0000021c BMCMidi::sendRealTime(unsigned char, unsigned char, unsigned char) [clone .part.0]
00023358 l     F .text.itcm	00000082 BMCMidi::scrollPC(unsigned char, unsigned char, unsigned char, bool, bool, unsigned char, unsigned char) [clone .part.0]
000236c4 l     F .text.itcm	00000090 BMCMidi::scrollCC(unsigned char, unsigned char, unsigned char, unsigned char, bool, bool, unsigned char, unsigned char) [clone .part.0]
00000000 l    df *ABS*	00000000 BMC-24LC256.cpp
00000000 l    df *ABS*	00000000 Adafruit_GFX.cpp
2000103c l     O .data	00000500 font
00000000 l    df *ABS*	00000000 MassStorageDriver.cpp
00000000 l    df *ABS*	00000000 ehci.cpp
2000bc7a l     O .bss	00000001 port_state
2000b5a0 l     O .bss	00000004 active_timers
20006000 l     O .bss	00000080 periodictable
2000b5d4 l     O .bss	00000100 uframe_bandwidth
2000b6dc l     O .bss	00000004 async_followup_last
2000b6e0 l     O .bss	00000004 async_followup_first
2000b6e4 l     O .bss	00000004 periodic_followup_last
2000b6e8 l     O .bss	00000004 periodic_followup_first
2000b6f0 l     O .bss	00000004 rootdev
00000000 l    df *ABS*	00000000 enumeration.cpp
2000b6d4 l     O .bss	00000004 available_drivers
2000b6ec l     O .bss	00000004 devlist
2000a720 l     O .bss	00000800 enumbuf
2000bc6c l     O .bss	00000002 enumlen
2000af20 l     O .bss	00000008 enumsetup
2000bc80 l     O .bss	00000001 USBHost::assign_address()::last_assigned_address
00000000 l    df *ABS*	00000000 memory.cpp
20006080 l     O .bss	00000060 memory_Pipe
2000b5a4 l     O .bss	00000024 memory_Device
2000b5c8 l     O .bss	00000004 free_Pipe_list
200060e0 l     O .bss	00000100 memory_Transfer
2000b5cc l     O .bss	00000004 free_Device_list
2000b5d0 l     O .bss	00000004 free_strbuf_list
2000b6d8 l     O .bss	00000004 free_Transfer_list
00000000 l    df *ABS*	00000000 midi.cpp
00000000 l    df *ABS*	00000000 WS2812Serial.cpp
00000000 l    df *ABS*	00000000 DMAChannel.cpp
00000000 l    df *ABS*	00000000 HardwareSerial.cpp
00000000 l    df *ABS*	00000000 Print.cpp
00029d40 l     F .text.itcm	0000007e Print::printNumber(unsigned long, unsigned char, unsigned char) [clone .part.0]
00000000 l    df *ABS*	00000000 WString.cpp
00000000 l    df *ABS*	00000000 clockspeed.c
00000000 l    df *ABS*	00000000 delay.c
00000000 l    df *ABS*	00000000 digital.c
00000000 l    df *ABS*	00000000 eeprom.c
2000bc82 l     O .bss	00000001 initialized
2000bac4 l     O .bss	0000001e sector_index
00000000 l    df *ABS*	00000000 main.cpp
00000000 l    df *ABS*	00000000 memcpy-armv7m.S.o
00000000 l    df *ABS*	00000000 new.cpp
00000000 l    df *ABS*	00000000 nonstd.c
00000000 l    df *ABS*	00000000 pwm.c
00000000 l    df *ABS*	00000000 usb_inst.cpp
00000000 l    df *ABS*	00000000 usb_midi.c
0002b70c l     F .text.itcm	00000040 sysex_byte
0002b74c l     F .text.itcm	00000060 rx_queue_transfer
0002b7ac l     F .text.itcm	00000064 rx_event
0002b810 l     F .text.itcm	0000013c usb_midi_write_packed.part.0
2000ba6c l     O .bss	00000004 rx_available
2000ba74 l     O .bss	0000000c rx_count
2000bc83 l     O .bss	00000001 rx_head
2000ba80 l     O .bss	0000000c rx_index
2000ba9c l     O .bss	00000007 rx_list
2000bc70 l     O .bss	00000002 rx_packet_size
2000bc85 l     O .bss	00000001 rx_tail
2000a360 l     O .bss	000000c0 rx_transfer
2000bc88 l     O .bss	00000001 transmit_previous_timeout
2000bc72 l     O .bss	00000002 tx_available
2000bc8a l     O .bss	00000001 tx_head
2000bc8c l     O .bss	00000001 tx_noautoflush
2000bc76 l     O .bss	00000002 tx_packet_size
2000a520 l     O .bss	00000080 tx_transfer
20200080 l     O .bss.dma	00000c00 rx_buffer
20200c80 l     O .bss.dma	00000800 txbuffer
00000000 l    df *ABS*	00000000 usb_seremu.c
0002c110 l     F .text.itcm	0000004c rx_queue_transfer
0002c15c l     F .text.itcm	00000058 rx_event
0002c398 l     F .text.itcm	00000048 usb_seremu_flush_callback
0002c3e0 l     F .text.itcm	0000013c usb_seremu_write.part.0
2000ba70 l     O .bss	00000004 rx_available
2000bc84 l     O .bss	00000001 rx_head
2000ba8c l     O .bss	00000010 rx_index
2000baa4 l     O .bss	00000009 rx_list
2000bc86 l     O .bss	00000001 rx_tail
2000a420 l     O .bss	00000100 rx_transfer
2000bc89 l     O .bss	00000001 transmit_previous_timeout
2000bc74 l     O .bss	00000002 tx_available
2000bc8b l     O .bss	00000001 tx_head
2000bc8d l     O .bss	00000001 tx_noautoflush
2000a5a0 l     O .bss	00000180 tx_transfer
20201480 l     O .bss.dma	00000100 rx_buffer
20201580 l     O .bss.dma	00000300 txbuffer
00000000 l    df *ABS*	00000000 yield.cpp
2000bc7e l     O .bss	00000001 yield::running
00000000 l    df *ABS*	00000000 rtc.c
00000000 l    df *ABS*	00000000 serialEvent.cpp
00000000 l    df *ABS*	00000000 libm_a-w_fmod.o
00000000 l    df *ABS*	00000000 libm_a-s_cos.o
00000000 l    df *ABS*	00000000 libm_a-e_fmod.o
00000000 l    df *ABS*	00000000 libm_a-e_rem_pio2.o
00000000 l    df *ABS*	00000000 libm_a-k_rem_pio2.o
00000000 l    df *ABS*	00000000 libm_a-k_cos.o
00000000 l    df *ABS*	00000000 libm_a-k_sin.o
00000000 l    df *ABS*	00000000 libm_a-s_fabs.o
00000000 l    df *ABS*	00000000 libm_a-s_scalbn.o
00000000 l    df *ABS*	00000000 libm_a-s_floor.o
00000000 l    df *ABS*	00000000 atexit_arm.o
00000000 l    df *ABS*	00000000 libc_a-callocr.o
00000000 l    df *ABS*	00000000 libc_a-malloc.o
00000000 l    df *ABS*	00000000 libc_a-mallocr.o
00000000 l    df *ABS*	00000000 libc_a-mlock.o
00000000 l    df *ABS*	00000000 libc_a-realloc.o
00000000 l    df *ABS*	00000000 libc_a-reallocr.o
00000000 l    df *ABS*	00000000 libc_a-sprintf.o
00000000 l    df *ABS*	00000000 libc_a-findfp.o
0002e1cc l     F .text.itcm	00000018 stdio_exit_handler
0002e1e4 l     F .text.itcm	00000040 cleanup_stdio
0002e224 l     F .text.itcm	000000d4 global_stdio_init.part.0
00000000 l    df *ABS*	00000000 libc_a-fwalk.o
00000000 l    df *ABS*	00000000 libc_a-memmove.o
00000000 l    df *ABS*	00000000 libc_a-memset.o
00000000 l    df *ABS*	00000000 libc_a-strcat.o
00000000 l    df *ABS*	00000000 libc_a-strncpy.o
00000000 l    df *ABS*	00000000 libc_a-stpcpy.o
00000000 l    df *ABS*	00000000 libc_a-locale.o
00000000 l    df *ABS*	00000000 libc_a-cxa_atexit.o
00000000 l    df *ABS*	00000000 libc_a-sbrkr.o
00000000 l    df *ABS*	00000000 libc_a-writer.o
00000000 l    df *ABS*	00000000 libc_a-errno.o
00000000 l    df *ABS*	00000000 libc_a-strcmp.o
00000000 l    df *ABS*	00000000 libc_a-strcpy.o
00000000 l    df *ABS*	00000000 libc_a-init.o
00000000 l    df *ABS*	00000000 libc_a-lock.o
00000000 l    df *ABS*	00000000 libc_a-memchr.o
00000000 l    df *ABS*	00000000 libc_a-strlen.o
00000000 l    df *ABS*	00000000 libc_a-__atexit.o
00000000 l    df *ABS*	00000000 libc_a-freer.o
00000000 l    df *ABS*	00000000 libc_a-mbtowc_r.o
00000000 l    df *ABS*	00000000 libc_a-svfprintf.o
00000000 l    df *ABS*	00000000 libc_a-mprec.o
00000000 l    df *ABS*	00000000 libc_a-fclose.o
00000000 l    df *ABS*	00000000 libc_a-fflush.o
00000000 l    df *ABS*	00000000 libc_a-stdio.o
00000000 l    df *ABS*	00000000 libc_a-wctomb_r.o
00000000 l    df *ABS*	00000000 libc_a-localeconv.o
00000000 l    df *ABS*	00000000 libc_a-closer.o
00000000 l    df *ABS*	00000000 libc_a-lseekr.o
00000000 l    df *ABS*	00000000 libc_a-readr.o
00000000 l    df *ABS*	00000000 libc_a-wcrtomb.o
00000000 l    df *ABS*	00000000 libc_a-wcsrtombs.o
00000000 l    df *ABS*	00000000 libm_a-s_frexp.o
00000000 l    df *ABS*	00000000 libc_a-assert.o
00000000 l    df *ABS*	00000000 libc_a-dtoa.o
000316d0 l     F .text.itcm	00000126 quorem
00000000 l    df *ABS*	00000000 libc_a-fiprintf.o
00000000 l    df *ABS*	00000000 libc_a-svfiprintf.o
00000000 l    df *ABS*	00000000 libc_a-vfiprintf.o
0003260c l     F .text.itcm	00000076 __sprint_r.part.0
00033610 l     F .text.itcm	00000080 __sbprintf
00000000 l    df *ABS*	00000000 libc_a-fvwrite.o
00000000 l    df *ABS*	00000000 libc_a-wsetup.o
00000000 l    df *ABS*	00000000 libc_a-fputwc.o
00000000 l    df *ABS*	00000000 libc_a-wcsnrtombs.o
00000000 l    df *ABS*	00000000 libc_a-makebuf.o
00000000 l    df *ABS*	00000000 libc_a-wbuf.o
00000000 l    df *ABS*	00000000 libc_a-fstatr.o
00000000 l    df *ABS*	00000000 libc_a-isattyr.o
00000000 l    df *ABS*	00000000 libc_a-ctype_.o
00000000 l    df *ABS*	00000000 libc_a-impure.o
00000000 l    df *ABS*	00000000 libc_a-__call_atexit.o
00000000 l    df *ABS*	00000000 usb_product_name.c
00033e68 l     F .text.itcm	00000008 ___reboot_Teensyduino__veneer
00033e70 l     F .text.itcm	00000008 ___ZN7TwoWire5beginEv_veneer
00033e78 l     F .text.itcm	00000008 ___init_veneer
60001c00 l     F .text.code	00000008 __pwm_init_veneer
60001c08 l     F .text.code	00000008 __usb_init_serialnumber_veneer
60001c10 l     F .text.code	00000008 ____libc_init_array_veneer
60001c18 l     F .text.code	00000008 __memset_veneer
60001c20 l     F .text.code	00000008 __main_veneer
60001c28 l     F .text.code	00000008 __delay_veneer
60001c30 l     F .text.code	00000008 __set_arm_clock_veneer
0001acd4  w    F .text.itcm	000001cc BMCBuildData::getUIData(unsigned char, short)
0002e5d4 g     F .text.itcm	00000046 stpcpy
000281d4 g     F .text.itcm	00000010 USBHost::free_string_buffer(strbuf_t*)
0001a7e0 g     F .text.itcm	00000010 BMCEditor::getGlobalOffset()
00005ce8 g     F .text.itcm	00000188 BMC::printButtonTrigger(unsigned char, unsigned char, unsigned char)
00028108 g     F .text.itcm	00000050 USBHost::init_Device_Pipe_Transfer_memory()
00033e44 g     F .text.itcm	00000024 _isatty_r
0002e97c g     F .text.itcm	000000ba strcpy
0002c310 g     F .text.itcm	00000024 usb_seremu_available
000268e8 g     F .text.itcm	000000b0 Adafruit_GFX::getTextBounds(char const*, short, short, short*, short*, unsigned short*, unsigned short*)
00006644 g     F .text.itcm	00000560 BMC::ctrlHardware()
60001828 g     F .text.code	00000002 startup_default_late_hook
0002d548 g     F .text.itcm	00000012 fabs
0003155c g     F .text.itcm	0000002c _lseek_r
0001b1a0  w    F .text.itcm	00000032 BMCMidiMessage::appendToSysEx14Bits(unsigned short)
0002c5bc  w    F .text.itcm	000000f0 yield
00014378 g     F .text.itcm	000000c0 BMC::readLeds()
2000bc68 g     O .bss	00000004 usb_timer1_callback
000257f0 g     F .text.itcm	0000001e Adafruit_GFX::fillScreen(unsigned short)
2000ba34 g     O .bss	00000004 em_rx_tx2
6001e27c g     O .text.progmem	00000018 usb_string_manufacturer_name_default
000257c4 g     F .text.itcm	00000012 Adafruit_GFX::writeFastHLine(short, short, short, unsigned short)
00007fe4  w    F .text.itcm	000000c4 BMCSetLists::scrollSet(bool, bool, unsigned char, unsigned char, unsigned char)
2000bb10 g     O .bss	00000004 usb_midi_handleProgramChange
2000b238 g     O .bss	00000140 Wire1
0002b6f0  w    F .text.itcm	00000004 usb_seremu_class::peek()
000196a8  w    F .text.itcm	000001ec BMCEditor::saveSettings()
6001e25c  w    O .text.progmem	00000001 _serialEventUSB2_default
000233dc g     F .text.itcm	000002e8 BMCMidi::sendControlChange(unsigned char, unsigned char, unsigned char, unsigned char, unsigned char, bool)
2000b8b4 g     O .bss	00000001 __lock___atexit_recursive_mutex
000315b4 g     F .text.itcm	0000004c _wcrtomb_r
00027cb0 g     F .text.itcm	00000110 USBHost::claim_drivers(Device_struct*)
60001650 g     F .text.code	00000034 TwoWire::configSDApin(unsigned char)
00029e74 g     F .text.itcm	0000001c Print::println()
00025610 g     F .text.itcm	000000ac TwoWire::isr()
000314ec g     F .text.itcm	00000020 __sseek
0002e2f8 g     F .text.itcm	0000003c __sinit
00033d68 g     F .text.itcm	000000b0 __swbuf_r
000271d4 g     F .text.itcm	0000015c USBHost::followup_Error()
00028ddc g     F .text.itcm	000001ac WS2812Serial::begin()
0002dd90 g     F .text.itcm	0000000c __malloc_unlock
2000baf4 g     O .bss	00000004 usb_midi_handleAfterTouch
000000c8  w    F .text.itcm	00000002 USBDriver::control(Transfer_struct const*)
00015544  w    F .text.itcm	0000011c BMCMidi::routing(BMCMidiMessage&)
2000bc7d g     O .bss	00000001 USBHost::enumeration_busy
000026f4 g     F .text.itcm	000000ac BMC::stopwatchCmd(unsigned char, unsigned char, unsigned char, unsigned char)
00028248 g     F .text.itcm	00000030 USBHost::contribute_String_Buffers(strbuf_t*, unsigned long)
00026734 g     F .text.itcm	000001b2 Adafruit_GFX::charBounds(unsigned char, short*, short*, short*, short*, short*, short*)
600017cc g     F .text.code	00000054 analog_init
0002a6b0 g     F .text.itcm	00000048 eeprom_initialize
00001a5c  w    F .text.itcm	0000010c BMC::runLayerChanged()
20004ba4 g     O .data	00000004 F_CPU_ACTUAL
2000bb28 g     O .bss	00000004 usb_midi_handleSysExComplete
000225f0 g     F .text.itcm	00000034 BMCEditor::layerProcessMessage()
00019154 g     F .text.itcm	00000114 BMCEditor::backupEventMessage(unsigned short)
0002e394 g     F .text.itcm	000000f8 memmove
0001d084  w    F .text.itcm	00000170 BMCEditor::saveDevicePorts(unsigned char)
00029618 g     F .text.itcm	00000072 HardwareSerial::peek()
00028198 g     F .text.itcm	00000010 USBHost::allocate_Transfer()
00030ac4 g     F .text.itcm	0000004c _Balloc
00033e8c g       .ARM.exidx	00000000 __exidx_end
2000bc94 g     O .bss	00000001 usb_midi_msg_type
00013f20 g     F .text.itcm	00000130 BMC::assignLeds()
2000bc7b g     O .bss	00000001 EventResponder::runningFromYield
00015660  w    F .text.itcm	000002ac BMCMidiClock::read(bool, bool)
0000afc0  w    F .text.itcm	000002a4 BMCDisplay::renderFasLooper(BMCDataContainer)
200047ec g     O .data	000000a0 pwm_pin_info
00009998  w    F .text.itcm	0000018a BMCBeatBuddy::tempo(unsigned short)
0002ad80 g     F .text.itcm	00000060 tempmonGetTemp
00027b34 g     F .text.itcm	00000038 USBHost::Task()
00029dc0 g     F .text.itcm	00000050 Print::write(unsigned char const*, unsigned int)
000285a8 g     F .text.itcm	0000000c MIDIDeviceBase::rx_callback(Transfer_struct const*)
20004c1c g     O .data	00000004 __atexit_recursive_mutex
000151f8 g     F .text.itcm	00000020 BMC::prevLayer()
0002e684 g     F .text.itcm	0000000c __errno
60001000 g     O .text.headers	00000020 ImageVectorTable
0001ee04 g     F .text.itcm	00001f6e BMCEditor::incomingMessageDevice(bool)
0002b6f4  w    F .text.itcm	00000004 usb_seremu_class::read()
00026b68  w    F .text.itcm	0000002c SPIClass::SPIClass(unsigned int, unsigned int)
2000b6fc g     O .bss	00000004 EventResponder::firstInterrupt
0002b694 g     F .text.itcm	00000004 usb_transfer_status
00027c30 g     F .text.itcm	0000007e USBHost::convertStringDescriptorToASCIIString(unsigned char, Device_struct*, Transfer_struct const*)
00018934 g     F .text.itcm	00000078 BMC_SSD1306::dim(bool)
2000ba2c g     O .bss	00000004 __stdio_exit_handler
00025074 g     F .text.itcm	000000d8 BMC24LC256::read(unsigned long, unsigned char*, unsigned int)
00025af4 g     F .text.itcm	00000118 Adafruit_GFX::writeLine(short, short, short, short, unsigned short)
2000b038 g     O .bss	00000060 Serial1
20005216 g     O .data	00000001 analog_write_res
0002a03c g     F .text.itcm	0000003a String::String(String const&)
000188ac g     F .text.itcm	00000018 BMC_SSD1306::BMC_SSD1306(unsigned char, unsigned char)
0002c564 g     F .text.itcm	00000058 usb_seremu_flush_output
0002c51c g     F .text.itcm	0000002c usb_seremu_putchar
00033e18 g     F .text.itcm	0000002c _fstat_r
200044b4 g     O .data	00000280 digital_pin_to_info_PGM
0002c7a8 g     F .text.itcm	00000298 __ieee754_fmod
000018c0  w    F .text.itcm	0000019c BMCSync::BMCSync(BMCMidi&, BMCMidiClock&, BMCCallbacks&)
2000ba48 g     O .bss	00000004 errno
0002d670 g     F .text.itcm	00000110 floor
6001e1bc g     O .text.progmem	00000050 TwoWire::i2c3_hardware
00033e88 g       .text.itcm	00000000 _etext
00026a8c g     F .text.itcm	000000dc _spi_dma_rxISR0()
200056c0 g       .bss	00000000 _sbss
00027330 g     F .text.itcm	000001e0 USBHost::isr()
00012bdc  w    F .text.itcm	0000012c BMCButtonsDualHandler::read(unsigned char, unsigned char, bool)
000258e8 g     F .text.itcm	000000a4 Adafruit_GFX::drawLine(short, short, short, short, unsigned short)
00008314  w    F .text.itcm	000000d0 BMCSetLists::getPartName(unsigned char, char*)
2000bb3c g     O .bss	00000004 usb_midi_handleVelocityChange
00027b8c g     F .text.itcm	000000a4 USBHost::new_Device(unsigned long, unsigned long, unsigned long)
000295f0 g     F .text.itcm	00000026 HardwareSerial::available()
00011bc8 g     F .text.itcm	000001f4 BMC::assignAuxJacks()
0002c560 g     F .text.itcm	00000004 usb_seremu_write_buffer_free
0002a61c g     F .text.itcm	00000024 digitalRead
00009b6c  w    F .text.itcm	000001ba BMCCustomSysEx::send(unsigned char, unsigned char, unsigned char, unsigned char)
6001e38c g       *ABS*	00000000 _stextload
000187c0 g     F .text.itcm	00000076 BMC_SSD1306::drawFastHLine(short, short, short, unsigned short)
00000098 g     F .text.itcm	0000000c loop
0002aa24 g     F .text.itcm	0000007a flexpwm_init
0002a8a4 g     F .text.itcm	000000b4 flexpwmWrite
0002ba20 g     F .text.itcm	000000a0 usb_midi_flush_output
6000182c g     F .text.code	00000004 startup_debug_reset
0001d1f4  w    F .text.itcm	00000184 BMCEditor::saveShortCuts(unsigned char)
00024e48 g     F .text.itcm	00000026 BMCMidi::scrollPC(unsigned char, unsigned char, unsigned char, bool, bool, unsigned char, unsigned char)
0002b558 g     F .text.itcm	00000064 usb_config_rx
0002ab94  w    F .text.itcm	00000002 serialEvent1()
00015c04 g     F .text.itcm	00001558 BMC::incomingMidi(BMCMidiMessage)
000000cc  w    F .text.itcm	00000002 USBDriver::Task()
0002b704  w    F .text.itcm	00000008 usb_seremu_class::write(unsigned char const*, unsigned int)
0002bd38 g     F .text.itcm	000003d8 usb_midi_read
00027dc0 g     F .text.itcm	000002a0 USBHost::enumeration(Transfer_struct const*)
0001a85c g     F .text.itcm	00000010 BMCEditor::getGlobalButtonOffset(unsigned short)
00029acc g     F .text.itcm	00000004 HardwareSerial::write(unsigned char)
2000bb30 g     O .bss	00000004 usb_midi_handleSystemReset
00025c0c g     F .text.itcm	00000030 Adafruit_GFX::Adafruit_GFX(short, short)
000253d4 g     F .text.itcm	000000fc TwoWire::endTransmission(unsigned char)
0002ca40 g     F .text.itcm	00000294 __ieee754_rem_pio2
0002199c g     F .text.itcm	00000212 BMCEditor::globalSketchBytesData()
2000b6f8 g     O .bss	00000004 EventResponder::lastInterrupt
2000bc78 g     O .bss	00000002 usb_midi_msg_sysex_len
0002a708 g     F .text.itcm	00000134 memcpy
0001a7a4 g     F .text.itcm	00000016 BMCEditor::connectionHasChanged()
00008128  w    F .text.itcm	00000080 BMCSetLists::scrollPart(bool, bool, unsigned char, unsigned char, unsigned char)
2000bb14 g     O .bss	00000004 usb_midi_handleRealTimeSystem
00017e3c g     F .text.itcm	000000fc BMC::streamToSketch(unsigned char, int, char*)
200056c0 g     O .data	00000000 .hidden __TMC_END__
0002ef80 g     F .text.itcm	00001b44 _svfprintf_r
00014964 g     F .text.itcm	00000010 BMC::setupPixels()
2000bae8 g     O .bss	00000004 systick_millis_count
000230e8 g     F .text.itcm	00000270 BMCMidi::sendProgramChange(unsigned char, unsigned char, unsigned char, unsigned char)
00025394 g     F .text.itcm	00000040 TwoWire::wait_idle()
2000bc8e g     O .bss	00000001 usb_configuration
60000000 g     O .text.headers	00000200 FlexSPI_NOR_Config
0001590c  w    F .text.itcm	00000144 BMCDawLogicControl::incomingSysEx(BMCMidiMessage)
0002a958 g     F .text.itcm	000000cc analogWrite
0001bfa8  w    F .text.itcm	00000084 BMCStorage::debugStopTiming()
6001e27c  w    O .text.progmem	00000018 usb_string_manufacturer_name
0001a8c0 g     F .text.itcm	0000000c BMCEditor::getTimedEventOffset(unsigned short)
0001443c  w    F .text.itcm	0000028c BMCPixels::begin()
00011dbc g     F .text.itcm	00000046 BMC::setupAuxJacks()
0002d804 g     F .text.itcm	00000010 malloc
6001e16c g     O .text.progmem	00000050 TwoWire::i2c1_hardware
000188d4 g     F .text.itcm	0000001e BMC_SSD1306::clearDisplay()
0002ad5c  w    F .text.itcm	0000000a _fstat
0002517c  w    F .text.itcm	0000001e TwoWire::read()
0002829c g     F .text.itcm	00000008 MIDIDeviceBase::disconnect()
00031690 g     F .text.itcm	00000040 __assert_func
00026998  w    F .text.itcm	00000016 EventResponder::triggerEvent(int, void*)
0001a898 g     F .text.itcm	0000000e BMCEditor::getCustomSysExOffset(unsigned short)
000239fc g     F .text.itcm	000002a8 BMCMidi::sendNoteOff(unsigned char, unsigned char, unsigned char, unsigned char, unsigned char)
200002f8 g     O .data	000000c8 __mprec_tens
60001ab4 g     F .text.code	000000e8 usb_init
000188ac g     F .text.itcm	00000018 BMC_SSD1306::BMC_SSD1306(unsigned char, unsigned char)
2000bc7f  w    O .bss	00000001 BMCSerialMonitor::read(char*)::i
0002d368 g     F .text.itcm	00000130 __kernel_cos
00025810 g     F .text.itcm	00000002 Adafruit_GFX::invertDisplay(bool)
00018ae8 g     F .text.itcm	000004f8 BMC_SSD1306::begin(unsigned char, unsigned char)
2000b8f0 g     O .bss	00000004 __malloc_top_pad
2000af80 g     O .bss	00000050 SPI1
2000baec g     O .bss	00000004 systick_safe_read
0002528c g     F .text.itcm	00000108 TwoWire::force_clock()
000081a8  w    F .text.itcm	000000b0 BMCSetLists::getSetName(unsigned char, char*)
0001a824 g     F .text.itcm	0000000a BMCEditor::getSketchBytesOffset(unsigned short)
aaaabfff g       *ABS*	00000000 _flexram_bank_config
20004c24 g     O .data	00000000 .hidden __dso_handle
0001728c  w    F .text.itcm	000001e2 BMCSerialMIDI<(unsigned char)1, HardwareSerial>::_read()
0000ad88  w    F .text.itcm	00000238 BMCDisplay::renderFasTuner(BMCDataContainer)
00031530 g     F .text.itcm	00000008 _localeconv_r
00033690 g     F .text.itcm	000002f4 __sfvwrite_r
00030c68 g     F .text.itcm	0000005c __i2b
00009650  w    F .text.itcm	00000348 BMCBeatBuddy::sendCommand(unsigned char, unsigned char)
20000000 g       .data	00000000 _sdata
000212d4 g     F .text.itcm	00000038 BMCEditor::globalBuildInfoMessage()
2000bb08 g     O .bss	00000004 usb_midi_handleNoteOn
00029d38  w    F .text.itcm	00000006 usb_seremu_class::write(unsigned char)
6001e30c g     O .text.progmem	00000073 usb_config_descriptor_480
0002e634 g     F .text.itcm	00000024 _sbrk_r
00012ef4  w    F .text.itcm	0000006c void BMC::handleButton<(unsigned char)6, (unsigned char)6>(bmcStoreDevice<(unsigned char)6, (unsigned char)6, unsigned char>&, unsigned char, unsigned short, unsigned char)
60001820 g     F .text.code	00000002 startup_default_early_hook
60001620 g     F .text.code	00000030 ResetHandler
200040f0 g     O .data	00000058 vtable for BMC_SSD1306
000281e4 g     F .text.itcm	00000030 USBHost::contribute_Pipes(Pipe_struct*, unsigned long)
0001d4f4  w    F .text.itcm	0000016c BMCEditor::saveSketchBytes()
0002a5c8 g     F .text.itcm	00000054 digitalWrite
2000b700 g     O .bss	00000004 EventResponder::lastYield
0002514c g     F .text.itcm	00000022 BMC24LC256::read(unsigned long)
00031588 g     F .text.itcm	0000002c _read_r
0002b94c g     F .text.itcm	000000c4 usb_midi_configure
0003123c g     F .text.itcm	000000c6 _fclose_r
00021010 g     F .text.itcm	00000130 BMCEditor::disconnect(bool)
00021bf8 g     F .text.itcm	00000038 BMCEditor::globalEditorMetrics()
2000b8e8 g     O .bss	00000004 __malloc_max_sbrked_mem
0001aacc g     F .text.itcm	0000019c BMCEditor::read()
00021140 g     F .text.itcm	000000e0 BMCEditor::disconnectEditor()
0002a640 g     F .text.itcm	00000070 pinMode
0002a118 g     F .text.itcm	00000036 String::getBytes(unsigned char*, unsigned int, unsigned int) const
00029ed8 g     F .text.itcm	00000164 Print::printFloat(double, unsigned char)
0002d498 g     F .text.itcm	000000b0 __kernel_sin
00003b08 g     F .text.itcm	000001d4 BMC::printBoardInfo()
000091e0  w    F .text.itcm	0000010c BMCFas::looperControl(unsigned char)
00028f88 g     F .text.itcm	00000474 WS2812Serial::show()
6001e25d  w    O .text.progmem	00000001 _serialEventUSB1_default
60001684 g     F .text.code	00000054 TwoWire::setSDA(unsigned char)
2000b378 g     O .bss	00000140 Wire2
2000bb2c g     O .bss	00000004 usb_midi_handleSysExPartial
60057c00 g     O .text.csf	00000c00 hab_csf
20280000 g       .text.csf	00000000 _heap_end
00015164 g     F .text.itcm	00000092 BMC::scrollLayer(bool, bool, unsigned char, unsigned char, unsigned char)
00033e84 g       .ARM.exidx	00000000 __exidx_start
0002ad68  w    F .text.itcm	00000004 _isatty
2000bc92 g     O .bss	00000001 usb_midi_msg_data1
2000b6f4 g     O .bss	00000004 EventResponder::firstYield
000257d8 g     F .text.itcm	00000018 Adafruit_GFX::writeFillRect(short, short, short, short, unsigned short)
0001a878 g     F .text.itcm	0000000e BMCEditor::getPotCalibrationOffset(unsigned short)
0002ddb4 g     F .text.itcm	000003d8 _realloc_r
0002ea38 g     F .text.itcm	00000048 __libc_init_array
00025170  w    F .text.itcm	0000000c TwoWire::available()
00024ed0 g     F .text.itcm	00000068 BMC24LC256::begin(BMC24LC256::twiClockFreq_t)
0002b6fc  w    F .text.itcm	00000004 usb_seremu_class::flush()
00033afc g     F .text.itcm	00000066 _fputwc_r
00026b68  w    F .text.itcm	0000002c SPIClass::SPIClass(unsigned int, unsigned int)
200002d0 g     O .data	00000028 __mprec_bigtens
0002ad78  w    F .text.itcm	00000004 abort
000254d0 g     F .text.itcm	00000140 TwoWire::requestFrom(unsigned char, unsigned char, unsigned char)
00000168  w    F .text.itcm	00000180 BMC_SSD1306::getCenteredXY(char*, unsigned short, unsigned short, unsigned short, unsigned short, unsigned char)
00026e7c g     F .text.itcm	000000e8 USBHost::queue_Transfer(Pipe_struct*, Transfer_struct*)
00024e70 g     F .text.itcm	00000060 BMC24LC256::BMC24LC256(BMC_eeprom_size_t, unsigned char, unsigned int, unsigned char)
0002ad1c  w    F .text.itcm	00000034 _sbrk
60052218 g       *ABS*	00000000 _sdataload
00030fd0 g     F .text.itcm	00000042 __mcmp
20004c20 g     O .data	00000004 __brkval
0001a988 g     F .text.itcm	00000144 BMCEditor::sendNotification(unsigned short, unsigned long, bool, bool)
00002980 g     F .text.itcm	000004e4 BMC::begin()
0001a7d0 g     F .text.itcm	0000000e BMCEditor::getStoreOffset()
000018c0  w    F .text.itcm	0000019c BMCSync::BMCSync(BMCMidi&, BMCMidiClock&, BMCCallbacks&)
60001bf0 g     F .text.code	00000000 _init
00028658 g     F .text.itcm	000000ac MIDIDeviceBase::send_sysex_buffer_has_term(unsigned char const*, unsigned long, unsigned char)
00025f58 g     F .text.itcm	000002a0 Adafruit_GFX::fillTriangle(short, short, short, short, short, short, unsigned short)
20003a24 g     O .data	00000050 SPIClass::spiclass_lpspi1_hardware
0002a078 g     F .text.itcm	0000000e String::~String()
0002bac0 g     F .text.itcm	000000c0 usb_midi_send_sysex_buffer_has_term
00025c3c g     F .text.itcm	000001a0 Adafruit_GFX::fillCircleHelper(short, short, short, unsigned char, short, unsigned short)
0002a03c g     F .text.itcm	0000003a String::String(String const&)
00027b6c g     F .text.itcm	00000020 USBHost::driver_ready_for_device(USBDriver*)
00012f60 g     F .text.itcm	0000041c BMC::readButtons()
00014d94 g     F .text.itcm	0000001c BMC::layerChanged()
0002c548 g     F .text.itcm	00000018 usb_seremu_write
0001aea0  w    F .text.itcm	00000024 BMCMidiMessage::get14Bits(unsigned short)
0001144c  w    F .text.itcm	000003f2 BMCAuxJackPot::begin(unsigned char)
6001e298 g     O .text.progmem	00000073 usb_config_descriptor_12
0002ccd8 g     F .text.itcm	00000690 __kernel_rem_pio2
20004204 g     O .data	00000024 vtable for TwoWire
2000bcc0 g       .bss	00000000 _ebss
00009b24  w    F .text.itcm	00000048 BMCBeatBuddy::tempoControl(unsigned char, bool)
000257a0 g     F .text.itcm	0000000e Adafruit_GFX::writePixel(short, short, unsigned short)
2000b098 g     O .bss	00000060 Serial3
000265cc g     F .text.itcm	00000136 Adafruit_GFX::write(unsigned char)
0001a7bc g     F .text.itcm	0000000a BMCEditor::setLayer(unsigned char)
600016d8 g     F .text.code	00000034 TwoWire::configSCLpin(unsigned char)
000295d0 g     F .text.itcm	00000020 HardwareSerial::availableForWrite()
00015a50  w    F .text.itcm	000001b4 BMCBeatBuddy::incoming(BMCMidiMessage)
00030bc8 g     F .text.itcm	00000040 __hi0bits
00009190  w    F .text.itcm	00000026 BMCFas::tunerOn()
000256c8 g     F .text.itcm	0000000c lpi2c3_isr()
000080a8  w    F .text.itcm	00000080 BMCSetLists::scrollSong(bool, bool, unsigned char, unsigned char, unsigned char)
0001d660  w    F .text.itcm	000001a0 BMCEditor::saveLayersAndReloadData(unsigned char)
00012d74 g     F .text.itcm	00000116 BMC::assignButton(BMCButton&, bmcStoreDevice<(unsigned char)6, (unsigned char)6, unsigned char>&)
20201880 g       .bss.dma	00000000 _heap_start
00017f38 g     F .text.itcm	000000ac BMC::streamMidi(unsigned char, unsigned char, unsigned char, unsigned char)
2000b8b8 g     O .bss	00000001 __lock___malloc_recursive_mutex
00021e98  w    F .text.itcm	000001f4 BMCEditor::saveLayer(unsigned char)
6001e20c g     O .text.progmem	00000050 TwoWire::i2c4_hardware
0002a088 g     F .text.itcm	00000066 String::copy(char const*, unsigned int)
2000b8f4 g     O .bss	00000138 __sf
0001a84c g     F .text.itcm	0000000e BMCEditor::getSetListSongOffset(unsigned short)
00000007 g       *ABS*	00000000 _itcm_block_count
000299f4 g     F .text.itcm	000000d8 HardwareSerial::write9bit(unsigned long)
2000a340 g     O .bss	00000020 endpoint0_transfer_data
0002aaa0 g     F .text.itcm	000000f4 pwm_init
00019fdc g     F .text.itcm	000003a4 BMCEditor::BMCEditor(bmcStore&, BMCMidi&, BMCSettings&, BMCMessenger&)
00007b4c  w    F .text.itcm	000002d8 BMCEditor::getDeviceNameText(unsigned char, unsigned short, char*)
00017228 g     F .text.itcm	00000064 BMC::midiProgramBankTrigger(unsigned char, unsigned char)
000008d4  w    F .text.itcm	00000afa BMCDawLogicControl::sendButtonCommand(unsigned char, unsigned char, bool, bool)
00025220  w    F .text.itcm	0000006c TwoWire::TwoWire(IMXRT_LPI2C_t*, TwoWire::I2C_Hardware_t const&)
000134e4 g     F .text.itcm	00000210 BMC::controlFirstLed(bool)
00029720 g     F .text.itcm	0000001a HardwareSerial::flush()
0001bf34  w    F .text.itcm	00000074 BMCStorage::debugStartTiming(char const*)
0002e530 g     F .text.itcm	0000003e strcat
0002a078 g     F .text.itcm	0000000e String::~String()
60058800 g       .text.csf	00000000 __text_csf_end
000257b0 g     F .text.itcm	00000012 Adafruit_GFX::writeFastVLine(short, short, short, unsigned short)
60001928 g     F .text.code	0000005c usb_pll_start
00030e20 g     F .text.itcm	000000c0 __pow5mult
000256d4 g     F .text.itcm	0000000c lpi2c4_isr()
000282a4 g     F .text.itcm	00000052 MIDIDeviceBase::timer_event(USBDriverTimer*)
0001a8cc g     F .text.itcm	000000ba BMCEditor::sendToEditor(BMCMidiMessage, bool, bool)
00019334  w    F .text.itcm	00000370 BMCStorage::begin()
00025220  w    F .text.itcm	0000006c TwoWire::TwoWire(IMXRT_LPI2C_t*, TwoWire::I2C_Hardware_t const&)
00005e70  w    F .text.itcm	000001ec BMCEditor::saveGlobalAndReloadData()
2000a320 g     O .bss	00000020 endpoint0_transfer_ack
00012918  w    F .text.itcm	000002c4 BMCButton::read()
0002b650 g     F .text.itcm	00000028 usb_transmit
0001b9f0  w    F .text.itcm	00000074 BMCMidiMessage::appendToSysEx32Bits(unsigned long)
000224ec g     F .text.itcm	000000bc BMCEditor::layerSendChangeMessage(bool)
000182cc g     F .text.itcm	0000020e BMC::readTrigger()
000295b0 g     F .text.itcm	00000020 systick_isr
0002ea8c g     F .text.itcm	00000002 __retarget_lock_release_recursive
0001809c g     F .text.itcm	00000050 BMC::streamMidiClockBPM(unsigned short)
00027098 g     F .text.itcm	0000013c USBHost::queue_Data_Transfer(Pipe_struct*, void*, unsigned long, USBDriver*)
20004ba8 g     O .data	00000010 Serial
00029c34 g     F .text.itcm	0000000c IRQHandler_Serial1
200041a0 g     O .data	00000024 vtable for HardwareSerial
60001820  w    F .text.code	00000002 startup_early_hook
0001a7f8 g     F .text.itcm	0000000a BMCEditor::getNamesOffset(unsigned short)
00023ca4 g     F .text.itcm	0000034c BMCMidi::sendPitchBend(unsigned char, unsigned char, short, unsigned char)
0002b700  w    F .text.itcm	00000004 usb_seremu_class::availableForWrite()
00029cb4 g     F .text.itcm	0000000c IRQHandler_Serial3
0002c6d8 g     F .text.itcm	00000050 fmod
00006ba4 g     F .text.itcm	00000074 BMC::ctrlPreset()
0002c728 g     F .text.itcm	00000080 cos
00022a6c g     F .text.itcm	0000008a BMCEditor::utilitySendAnalogInputCalibrationStatus(bool, bool, bool)
0001e760 g     F .text.itcm	000003bc BMCEditor::incomingMessageEvent(bool)
0002e334 g     F .text.itcm	0000000c __sfp_lock_acquire
0002ea90 g     F .text.itcm	00000000 memchr
00003818  w    F .text.itcm	00000174 BMCTools::getMidiStatusName(unsigned char)
00014db0 g     F .text.itcm	000000a0 BMC::getLayerName(unsigned char, char*)
0002a1dc g     F .text.itcm	000002f0 set_arm_clock
2000bae4 g     O .bss	00000004 systick_cycle_count
00022624 g     F .text.itcm	00000082 BMCEditor::utilityCommand()
20005200 g     O .data	00000016 usb_string_serial_number_default
000188c4 g     F .text.itcm	00000010 BMC_SSD1306::~BMC_SSD1306()
0002ed44 g     F .text.itcm	0000020c _free_r
2000bb24 g     O .bss	00000004 usb_midi_handleStop
00017654 g     F .text.itcm	00000780 BMC::readMidi()
00000068  w    F .text.itcm	00000022 BMCApi::~BMCApi()
0002e61c g     F .text.itcm	0000000c __locale_mb_cur_max
00031600 g     F .text.itcm	00000016 _wcsrtombs_r
000248d8 g     F .text.itcm	000004a6 BMCMidi::send(unsigned char, unsigned char, unsigned char, unsigned char, unsigned char, unsigned char)
2000b724 g     O .bss	00000190 __atexit0
00019fdc g     F .text.itcm	000003a4 BMCEditor::BMCEditor(bmcStore&, BMCMidi&, BMCSettings&, BMCMessenger&)
000004d0  w    F .text.itcm	000000ee bmcStoreGlobal::bmcStoreGlobal()
2000bb00 g     O .bss	00000004 usb_midi_handleControlChange
00024d80 g     F .text.itcm	00000068 BMCMidi::send(unsigned char, BMCMidiMessage, unsigned char)
2000519c g     O .data	00000004 __malloc_sbrk_base
0001a380 g     F .text.itcm	000003d8 BMCEditor::begin()
00017e08 g     F .text.itcm	00000034 BMC::getSketchByte(unsigned char)
0002598c g     F .text.itcm	00000094 Adafruit_GFX::fillRect(short, short, short, short, unsigned short)
0002ad6c  w    F .text.itcm	00000006 _lseek
0002ad74  w    F .text.itcm	00000004 __cxa_pure_virtual
00030ee0 g     F .text.itcm	000000f0 __lshift
0002b620 g     F .text.itcm	00000030 usb_prepare_transfer
0002ab9c g     F .text.itcm	00000180 unused_interrupt_vector
0003250c g     F .text.itcm	00000100 __ssprint_r
2000bc64 g     O .bss	00000004 usb_timer0_callback
60001984 g     F .text.code	00000130 tempmon_init
0002c6d0  w    F .text.itcm	00000002 serialEvent()
00028214 g     F .text.itcm	00000034 USBHost::contribute_Transfers(Transfer_struct*, unsigned long)
0002ec1c g     F .text.itcm	00000088 __register_exitproc
000222b0 g     F .text.itcm	0000023c BMCEditor::layerNameMessage(bool)
00001b68  w    F .text.itcm	0000013a BMC::runPresetChanged()
0002c1b4 g     F .text.itcm	000000b0 usb_seremu_configure
00018838 g     F .text.itcm	00000074 BMC_SSD1306::drawFastVLine(short, short, short, unsigned short)
00022254 g     F .text.itcm	0000005a BMCEditor::layerMessage(bool)
0001803c g     F .text.itcm	00000060 BMC::streamMidiControl(unsigned char, unsigned char, unsigned char)
00030cc4 g     F .text.itcm	0000015c __multiply
00000024 g       *ABS*	00000000 _teensy_model_identifier
0002e570 g     F .text.itcm	00000064 strncpy
2000b8c0 g     O .bss	00000028 __malloc_current_mallinfo
0002c264 g     F .text.itcm	00000068 usb_seremu_getchar
20003ac4 g     O .data	00000050 SPIClass::spiclass_lpspi4_hardware
00031168 g     F .text.itcm	000000d4 __d2b
000188f4 g     F .text.itcm	00000040 BMC_SSD1306::invertDisplay(bool)
0002579c g     F .text.itcm	00000002 Adafruit_GFX::endWrite()
2000b704 g     O .bss	0000001c HardwareSerial::s_serials_with_serial_events
00015218 g     F .text.itcm	00000024 BMC::nextLayer()
60001b9c g     F .text.code	00000054 _reboot_Teensyduino_
60001824 g     F .text.code	00000002 startup_default_middle_hook
0002dd9c g     F .text.itcm	00000018 realloc
000189ac g     F .text.itcm	0000013c BMC_SSD1306::display()
00007934  w    F .text.itcm	00000044 BMCTools::getBankLetter(unsigned char, char*)
00027510 g     F .text.itcm	00000240 USBHost::allocate_interrupt_pipe_bandwidth(Pipe_struct*, unsigned long, unsigned long)
00024f38 g     F .text.itcm	0000013c BMC24LC256::write(unsigned long, unsigned char*, unsigned int)
0002af9c g     F .text.itcm	000005bc usb_isr
0002e628 g     F .text.itcm	0000000c __cxa_atexit
00026f64 g     F .text.itcm	00000134 USBHost::queue_Control_Transfer(Device_struct*, setup_t*, void*, USBDriver*)
00031538 g     F .text.itcm	00000024 _close_r
0001715c g     F .text.itcm	000000cc BMC::midiProgramBankScroll(bool, bool, unsigned char, unsigned char, unsigned char)
2000bb04 g     O .bss	00000004 usb_midi_handleNoteOff
00026710 g     F .text.itcm	00000022 Adafruit_GFX::setFont(GFXfont const*)
000281b8 g     F .text.itcm	0000001c USBHost::allocate_string_buffer()
00014ba8 g     F .text.itcm	000001ec BMC::readPixels()
2000af30 g     O .bss	00000050 SPI
6001e260 g     O .text.progmem	00000001 _serialEvent3_default
0002a0f0 g     F .text.itcm	00000026 String::String(char const*)
0002ea84 g     F .text.itcm	00000002 __retarget_lock_close_recursive
000282f8 g     F .text.itcm	000001bc MIDIDeviceBase::claim(Device_struct*, int, unsigned char const*, unsigned long)
000180ec g     F .text.itcm	000000e4 BMC::runTempoToTap()
00026c04 g     F .text.itcm	0000014c USBHost::begin()
2000bac0 g     O .bss	00000004 scale_cpu_cycles_to_microseconds
2000afd0 g     O .bss	00000050 SPI2
00033984 g     F .text.itcm	000000cc __swsetup_r
20004148 g     O .data	00000058 vtable for Adafruit_GFX
0002c2cc g     F .text.itcm	00000044 usb_seremu_peekchar
00025e6c g     F .text.itcm	000000ec Adafruit_GFX::fillRoundRect(short, short, short, short, short, unsigned short)
00027750 g     F .text.itcm	0000007c USBHost::add_qh_to_periodic_schedule(Pipe_struct*)
6001e25f g     O .text.progmem	00000001 _serialEvent1_default
00025890 g     F .text.itcm	00000058 Adafruit_GFX::drawFastHLine(short, short, short, unsigned short)
20004d94 g     O .data	00000408 __malloc_av_
2000b720 g     O .bss	00000004 __atexit
00019268 g     F .text.itcm	000000c8 BMCEditor::backupNameMessage(unsigned short)
00007e24  w    F .text.itcm	00000154 BMCPresets::getName(unsigned short, char*)
00028704 g     F .text.itcm	000000e8 MIDIDeviceBase::send_sysex_add_term_bytes(unsigned char const*, unsigned long, unsigned char)
00012d08 g     F .text.itcm	0000006c BMC::setupButtons()
00031488 g     F .text.itcm	00000022 __sread
00021c78 g     F .text.itcm	0000021c BMCEditor::globalProcessMessage()
0002dd84 g     F .text.itcm	0000000c __malloc_lock
0001a8b4 g     F .text.itcm	0000000c BMCEditor::getTempoToTapOffset(unsigned short)
00021bb0 g     F .text.itcm	00000046 BMCEditor::globalEditorFeedback(bool)
20005400 g     O .data	000002c0 _VectorsRam
00026bdc  w    F .text.itcm	00000002 USBDriver::timer_event(USBDriverTimer*)
00031434 g     F .text.itcm	00000054 _fflush_r
00000068  w    F .text.itcm	00000022 BMCApi::~BMCApi()
00021c30 g     F .text.itcm	00000046 BMCEditor::globalEditorMessenger(bool)
0002d78c g     F .text.itcm	00000078 _calloc_r
00013db8 g     F .text.itcm	000000f4 BMC::handleSetupLeds(BMCLed&, unsigned short)
00012294  w    F .text.itcm	00000578 BMCButton::begin(unsigned char)
200041c4 g     O .data	0000001c vtable for MIDIDeviceBase
00009d28 g     F .text.itcm	00000328 BMC::handleClockLeds()
0001a830 g     F .text.itcm	0000000c BMCEditor::getPresetOffset(unsigned short)
20005217 g     O .data	00000001 yield_active_check_flags
0002ea88 g     F .text.itcm	00000002 __retarget_lock_acquire_recursive
2000bc8f g     O .bss	00000001 usb_high_speed
0002130c g     F .text.itcm	00000130 BMCEditor::globalStoreAddress(bool)
0001a7f0 g     F .text.itcm	00000008 BMCEditor::getEventsOffset(unsigned short)
0001eb1c g     F .text.itcm	000002e8 BMCEditor::incomingMessageName(bool)
0002e48c g     F .text.itcm	000000a4 memset
200041e0  w    O .data	00000024 vtable for usb_seremu_class
00017fe4 g     F .text.itcm	00000058 BMC::streamMidiProgram(unsigned char, unsigned char)
0002a6f8 g     F .text.itcm	00000010 main
00025838 g     F .text.itcm	00000058 Adafruit_GFX::drawFastVLine(short, short, short, unsigned short)
0001541c  w    F .text.itcm	00000128 BMCMidiPortHost::read(BMCMidiMessage&, bool)
2000b8ec g     O .bss	00000004 __malloc_max_total_mem
0002ea80 g     F .text.itcm	00000002 __retarget_lock_init_recursive
20200000 g     O .bss.dma	00000073 usb_descriptor_buffer
000004d0  w    F .text.itcm	000000ee bmcStoreGlobal::bmcStoreGlobal()
00028158 g     F .text.itcm	00000010 USBHost::allocate_Device()
0003150c g     F .text.itcm	00000008 __sclose
0001a818 g     F .text.itcm	0000000a BMCEditor::getLfoOffset(unsigned short)
0002b698 g     F .text.itcm	00000058 usb_init_serialnumber
00001ca4 g     F .text.itcm	00000a50 BMC::BMC()
0002579c g     F .text.itcm	00000002 Adafruit_GFX::startWrite()
00001ca4 g     F .text.itcm	00000a50 BMC::BMC()
60001c5c g       .text.code	00000000 __init_array_end
000317f8 g     F .text.itcm	00000cec _dtoa_r
0002d824 g     F .text.itcm	00000560 _malloc_r
2000bc7c g     O .bss	00000001 HardwareSerial::s_count_serials_with_serial_events
00031514 g     F .text.itcm	0000001a __ascii_wctomb
2000bb18 g     O .bss	00000004 usb_midi_handleSongPosition
000294e4 g     F .text.itcm	00000084 EventResponder::triggerEventNotImmediate()
2000bafc g     O .bss	00000004 usb_midi_handleContinue
2000bc93 g     O .bss	00000001 usb_midi_msg_data2
0002a574 g     F .text.itcm	00000054 micros
0000153c  w    F .text.itcm	000001d8 BMCFas::update()
000256e0 g     F .text.itcm	00000078 TwoWire::setClock(unsigned long)
0002eca4 g     F .text.itcm	000000a0 _malloc_trim_r
00021220 g     F .text.itcm	000000b4 BMCEditor::forceDisconnectEditor()
00033b64 g     F .text.itcm	00000106 _wcsnrtombs_l
6001e294 g     O .text.progmem	00000004 string0
00028518 g     F .text.itcm	00000090 MIDIDeviceBase::rx_data(Transfer_struct const*)
00013eac g     F .text.itcm	00000074 BMC::setupLeds()
00026d50 g     F .text.itcm	000000bc USBDriverTimer::start(unsigned long)
0001375c g     F .text.itcm	0000020c BMC::readHardware()
60001828  w    F .text.code	00000002 startup_late_hook
2000b020 g     O .bss	00000018 SWIMUCal
000053ac g     F .text.itcm	0000093c BMC::midiInDebug(BMCMidiMessage)
0002af38 g     F .text.itcm	00000038 usb_start_sof_interrupts
00007978  w    F .text.itcm	000001d4 BMCEditor::saveStore()
0002e6a8 g     F .text.itcm	000002dc strcmp
6001e25e  w    O .text.progmem	00000001 _serialEvent_default
2000bc90 g     O .bss	00000001 usb_midi_msg_cable
20006480 g     O .bss	00003ea0 bmc
000013d0  w    F .text.itcm	0000016c BMCFas::fetchSysEx(unsigned char, unsigned short, unsigned short, unsigned char)
20000000 g     O .data	00000280 endpoint_queue_head
200051ec g     O .data	00000014 usb_string_product_name
0001a7c8 g     F .text.itcm	00000006 BMCEditor::getLayer()
00015140 g     F .text.itcm	0000000e BMC::setLayer(unsigned char, bool, bool)
0002a4cc g     F .text.itcm	000000a8 delay
2000bc6e g     O .bss	00000002 dma_channel_allocated_mask
0001d05c  w    F .text.itcm	00000026 BMCEditor::backupActive()
00033e80 g     F .fini	00000000 _fini
000229a8 g     F .text.itcm	000000c2 BMCEditor::utilitySendPreset(unsigned char, unsigned char, bool)
000230c8 g     F .text.itcm	00000020 BMCMidi::sendSysEx(unsigned char, unsigned char*, unsigned short, bool, unsigned char, bool)
000251b8 g     F .text.itcm	0000002a TwoWire::write(unsigned char)
60001020 g     O .text.headers	0000000c BootData
000000d0  w    F .text.itcm	00000098 BMCStopwatch::set(unsigned char, unsigned char, unsigned char)
00024238 g     F .text.itcm	000002a8 BMCMidi::sendAfterTouchPoly(unsigned char, unsigned char, unsigned char, unsigned char, unsigned char)
00023ff0 g     F .text.itcm	00000248 BMCMidi::sendAfterTouch(unsigned char, unsigned char, unsigned char, unsigned char)
0002e18c g     F .text.itcm	00000040 sprintf
00029e5c g     F .text.itcm	00000016 Print::print(long)
0002ad7c g     F .text.itcm	00000004 Panic_Temp_isr
0002ba10 g     F .text.itcm	00000010 usb_midi_write_packed
000188c4 g     F .text.itcm	00000010 BMC_SSD1306::~BMC_SSD1306()
00033c6c g     F .text.itcm	00000024 _wcsnrtombs_r
00017dd4 g     F .text.itcm	00000034 BMC::setSketchByte(unsigned char, unsigned char)
0002e658 g     F .text.itcm	0000002c _write_r
000094a4  w    F .text.itcm	000000c4 BMCHelix::snapshotScroll(bool)
00025a20 g     F .text.itcm	000000d4 Adafruit_GFX::drawRect(short, short, short, short, unsigned short)
0002b6f8  w    F .text.itcm	00000004 usb_seremu_class::available()
0001a794 g     F .text.itcm	0000000e BMCEditor::connected()
0002a0f0 g     F .text.itcm	00000026 String::String(char const*)
000027f0  w    F .text.itcm	00000190 BMCDisplay::initOled()
0002bc90 g     F .text.itcm	000000a8 usb_midi_read_message
200051b0 g     O .data	00000004 _impure_ptr
0001a86c g     F .text.itcm	0000000c BMCEditor::getGlobalLedOffset(unsigned short)
00031304 g     F .text.itcm	00000130 __sflush_r
0002d560 g     F .text.itcm	0000010c scalbn
2000b0f8 g     O .bss	00000140 Wire
0002e34c g     F .text.itcm	00000046 _fwalk_sglue
2000bb38 g     O .bss	00000004 usb_midi_handleTuneRequest
60001c38 g       .text.code	00000000 __preinit_array_end
0001d378  w    F .text.itcm	0000017c BMCEditor::saveLFO(unsigned char)
000005c0  w    F .text.itcm	00000120 BMCPresets::set(unsigned char, unsigned char, bool)
0001a804 g     F .text.itcm	00000008 BMCEditor::getPortPresetsOffset(unsigned short)
0000a9dc  w    F .text.itcm	000003ac BMCDisplay::renderBlock(BMCDataContainer)
2000bc91 g     O .bss	00000001 usb_midi_msg_channel
0002ef50 g     F .text.itcm	0000002a __ascii_mbtowc
0000605c  w    F .text.itcm	000000d8 BMCSync::assignSettings()
0000b87c g     F .text.itcm	00005bce BMC::processEvent(unsigned char, unsigned char, unsigned short, unsigned short, unsigned char, unsigned char)
00019330 g     F .text.itcm	00000002 BMCEditor::backupLayerName(unsigned short)
0002af70 g     F .text.itcm	0000002c usb_stop_sof_interrupts
00014974 g     F .text.itcm	00000232 BMC::assignPixels()
00008258  w    F .text.itcm	000000bc BMCSetLists::getSongName(unsigned char, char*)
0002519c  w    F .text.itcm	00000018 TwoWire::peek()
00029ad0 g     F .text.itcm	00000164 HardwareSerial::IRQHandler()
000251b4  w    F .text.itcm	00000002 TwoWire::flush()
0000008c g     F .text.itcm	0000000c setup
200049d8 g     O .data	00000084 usb_descriptor_list
0002143c g     F .text.itcm	000000ce BMCEditor::globalSendBackupStatus()
00007f78  w    F .text.itcm	0000006c BMCSetLists::set(unsigned char)
000184e0  w    F .text.itcm	00000002 Print::flush()
2000bb20 g     O .bss	00000004 usb_midi_handleStart
000261f8 g     F .text.itcm	000003d4 Adafruit_GFX::drawChar(short, short, unsigned char, unsigned short, unsigned short, unsigned char, unsigned char)
00006178 g     F .text.itcm	000004cc BMC::assignSettings()
0002bb80 g     F .text.itcm	00000110 usb_midi_send_sysex_add_term_bytes
000181d0 g     F .text.itcm	000000fc BMC::readTimedEvent()
000281a8 g     F .text.itcm	00000010 USBHost::free_Transfer(Transfer_struct*)
20048000 g       .text.csf	00000000 _estack
000294b0 g     F .text.itcm	00000034 DMAChannel::release()
00028178 g     F .text.itcm	00000010 USBHost::allocate_Pipe()
000287ec g     F .text.itcm	000005f0 MIDIDeviceBase::read(unsigned char)
00012e8c g     F .text.itcm	00000066 BMC::assignButtons()
0000b58c  w    F .text.itcm	000002f0 BMCDisplay::renderFasStatus(BMCDataContainer)
00008d20  w    F .text.itcm	0000011a BMCDawLogicControl::sendEncoderScrollAssign(bool)
000246ec g     F .text.itcm	000001ec BMCMidi::sendSongSelect(unsigned char, unsigned char, unsigned char)
000006e0  w    F .text.itcm	000000e4 BMCSetLists::setPart(unsigned char)
6000170c g     F .text.code	00000058 TwoWire::setSCL(unsigned char)
200051a4 g     O .data	0000000c __sglue
0001a77c g     F .text.itcm	00000016 BMCEditor::dataForBMCAvailable()
000251e4 g     F .text.itcm	0000003c TwoWire::write(unsigned char const*, unsigned int)
000284b4 g     F .text.itcm	00000062 MIDIDeviceBase::init()
00029e90  w    F .text.itcm	0000001c _write
200056c0 g       .data	00000000 _edata
000083e4  w    F .text.itcm	0000093a BMCDawLogicControl::getLedState(unsigned char, unsigned char)
00019048 g     F .text.itcm	0000010c BMCEditor::backupGlobalSettings(unsigned short)
00003cdc g     F .text.itcm	00000170 BMC::setupDebug()
00033a50 g     F .text.itcm	000000aa __fputwc
000091b8  w    F .text.itcm	00000026 BMCFas::tunerOff()
0001337c g     F .text.itcm	00000168 BMC::setupHardware()
000256bc g     F .text.itcm	0000000c lpi2c1_isr()
0002973c g     F .text.itcm	00000040 nvic_execution_priority()
000230b8 g     F .text.itcm	00000010 BMCMidi::sendRealTime(unsigned char, unsigned char, unsigned char)
2000baf8 g     O .bss	00000004 usb_midi_handleClock
00028188 g     F .text.itcm	00000010 USBHost::free_Pipe(Pipe_struct*)
00009600  w    F .text.itcm	00000050 BMCHelix::toggleSnapshot(unsigned char, unsigned char)
0002a840 g     F .text.itcm	00000062 ultoa
60001764 g     F .text.code	00000068 TwoWire::begin()
00019cc0  w    F .text.itcm	0000031c BMCEditor::getStore()
000225a8 g     F .text.itcm	00000046 BMCEditor::layerMessageLayerCopySwap(bool)
000007c4  w    F .text.itcm	00000110 BMCSetLists::setSong(unsigned char)
00025ddc g     F .text.itcm	00000090 Adafruit_GFX::fillCircle(short, short, short, unsigned short)
0001a8a8 g     F .text.itcm	0000000a BMCEditor::getTriggerOffset(unsigned short)
000314ac g     F .text.itcm	0000003e __swrite
0002a83c g     F .text.itcm	00000004 operator new(unsigned int)
00029568 g     F .text.itcm	00000044 EventResponder::runFromInterrupt()
0001a888 g     F .text.itcm	0000000e BMCEditor::getAuxJackOffset(unsigned short)
200051a0 g     O .data	00000004 __malloc_trim_threshold
000002e8  w    F .text.itcm	000001e8 BMCLFO::getWave(unsigned long)
0001a80c g     F .text.itcm	0000000a BMCEditor::getShortcutsOffset(unsigned short)
000226a8 g     F .text.itcm	0000008a BMCEditor::utilitySendFasState(unsigned char, bool)
000324e4 g     F .text.itcm	00000028 fiprintf
0000a050  w    F .text.itcm	000002d0 bool BMCDisplayHandlerFas::renderLooper<BMC_SSD1306>(BMC_SSD1306&, unsigned char&, BMCDiplayHandlerData, bool)
00032684 g     F .text.itcm	00000f8c _vfiprintf_r
00015150 g     F .text.itcm	00000012 BMC::reloadLayer()
0000398c  w    F .text.itcm	0000017c BMCEditor::printDevicesInfo()
00031014 g     F .text.itcm	00000154 __mdiff
0002968c g     F .text.itcm	00000092 HardwareSerial::read()
20003a74 g     O .data	00000050 SPIClass::spiclass_lpspi3_hardware
00017470  w    F .text.itcm	000001e2 BMCSerialMIDI<(unsigned char)2, HardwareSerial>::_read()
00024e20 g     F .text.itcm	00000028 BMCMidi::scrollCC(unsigned char, unsigned char, unsigned char, unsigned char, bool, bool, unsigned char, unsigned char)
000269b0 g     F .text.itcm	000000dc _spi_dma_rxISR1()
2000bb0c g     O .bss	00000004 usb_midi_handlePitchChange
00011840  w    F .text.itcm	00000388 BMCAuxJackButton::begin(unsigned char)
00002e64 g     F .text.itcm	0000080c BMC::update()
00026e0c g     F .text.itcm	00000070 USBDriverTimer::stop()
20004a80 g     O .data	00000120 _impure_data
0001a83c g     F .text.itcm	0000000e BMCEditor::getSetListOffset(unsigned short)
00007664  w    F .text.itcm	00000120 BMCBuildData::getSketchByteData(unsigned char)
0002e340 g     F .text.itcm	0000000c __sfp_lock_release
00028278 g     F .text.itcm	00000024 MIDIDeviceBase::tx_callback(Transfer_struct const*)
00008e3c  w    F .text.itcm	000002d4 BMCDawLogicControl::sendEncoderScrolling(unsigned char, unsigned char, bool, unsigned char)
0000915c  w    F .text.itcm	00000032 BMCFas::isBlockEngaged(unsigned short)
2000bb34 g     O .bss	00000004 usb_midi_handleTimeCodeQuarterFrame
200042e0 g     O .data	00000101 _ctype_
00022af8 g     F .text.itcm	00000102 BMCEditor::utilitySendAnalogInputCalibrationActivity(unsigned char, unsigned short, unsigned short, unsigned short, bool)
00003e4c g     F .text.itcm	00001560 BMC::readDebug()
0002ad50  w    F .text.itcm	00000004 _read
200061e0 g     O .bss	000002a0 BMC_ST7735_t3::_dma_data
60001c38 g       .text.code	00000000 __init_array_start
0002a150 g     F .text.itcm	0000008c analogRead
20004ba0 g     O .data	00000004 F_BUS_ACTUAL
2000ba30 g     O .bss	00000004 em_rx_tx
2000bb40 g     O .bss	00000122 usb_midi_msg_sysex
200047d0 g     O .data	0000001c pin_to_channel
00006134 g     F .text.itcm	00000044 BMC::assignStoreData()
00023754 g     F .text.itcm	000002a8 BMCMidi::sendNoteOn(unsigned char, unsigned char, unsigned char, unsigned char, unsigned char)
00003738  w    F .text.itcm	000000e0 BMCTools::printPortsNames(unsigned char)
0000b264  w    F .text.itcm	00000328 BMCDisplay::renderFasLooperIcon(BMCDataContainer)
00033c90 g     F .text.itcm	000000d8 __smakebuf_r
0001e604 g     F .text.itcm	0000015a BMCEditor::incomingMessageLinks()
00000000 g       .text.itcm	00000000 _stext
000293fc g     F .text.itcm	000000b4 DMAChannel::begin(bool)
00009568  w    F .text.itcm	00000098 BMCHelix::setSnapshot(unsigned char)
00013968  w    F .text.itcm	00000450 BMCLed::begin(unsigned char)
0002166c g     F .text.itcm	00000330 BMCEditor::globalSettingsMessage(bool)
000244e0 g     F .text.itcm	0000020c BMCMidi::sendSongPosition(unsigned char, unsigned short, unsigned char)
0002eb40 g     F .text.itcm	000000dc strlen
00028168 g     F .text.itcm	00000010 USBHost::free_Device(Device_struct*)
00011e04 g     F .text.itcm	00000490 BMC::readAuxJacks()
2000bc96 g     O .bss	00000001 usb_seremu_online
000184e4 g     F .text.itcm	000000f2 BMC_SSD1306::drawPixel(short, short, unsigned short)
6001e264 g     O .text.progmem	00000018 usb_string_product_name_default
00022734 g     F .text.itcm	00000272 BMCEditor::utilitySendStateBits(unsigned char, bool)
0001a764 g     F .text.itcm	00000016 BMCEditor::readyToReload()
0001e384  w    F .text.itcm	00000280 BMCEditor::changeStoreLocal(unsigned char)
00007784  w    F .text.itcm	000001b0 BMCTools::getSketchByteFormat(char*, unsigned char, unsigned char)
60001824  w    F .text.code	00000002 startup_middle_hook
00029e10 g     F .text.itcm	0000004c Print::print(String const&)
60001830 g     F .text.code	000000f8 configure_cache
00028060 g     F .text.itcm	00000080 USBHost::disconnect_Device(Device_struct*)
00006c18 g     F .text.itcm	000000fa BMC::editorRead()
000285b4 g     F .text.itcm	000000a2 MIDIDeviceBase::write_packed(unsigned long)
0002977c g     F .text.itcm	00000278 HardwareSerial::begin(unsigned long, unsigned short)
0000a370  w    F .text.itcm	0000033c BMCDisplay::renderMidi(BMCDataContainer)
000152b4  w    F .text.itcm	00000168 BMCTunerData::setData(unsigned char, unsigned char, unsigned char)
60001c38 g       .text.code	00000000 __preinit_array_start
0002b678 g     F .text.itcm	0000001c usb_receive
0001a758 g     F .text.itcm	0000000a BMCEditor::update()
00030c08 g     F .text.itcm	00000060 __lo0bits
0001b1d4  w    F .text.itcm	00000048 BMCMidiMessage::appendToSysEx16Bits(unsigned short)
0002c334 g     F .text.itcm	00000064 tx_queue_transfer
00014050  w    F .text.itcm	00000328 void BMC::handleLed<(unsigned short)5>(BMCLed&, BMCBitStates<(unsigned short)5>&, unsigned char, unsigned char)
00027918 g     F .text.itcm	0000021c USBHost::delete_Pipe(Pipe_struct*)
00058800 g       *ABS*	00000000 _flashimagelen
00025c0c g     F .text.itcm	00000030 Adafruit_GFX::Adafruit_GFX(short, short)
000146c8  w    F .text.itcm	0000029c BMCPixels::write(unsigned short, unsigned char)
0002ab98  w    F .text.itcm	00000002 serialEvent3()
0002d780 g     F .text.itcm	0000000a __aeabi_atexit
0001e1fc  w    F .text.itcm	000000c0 BMCEditor::backupCancel()
2000bb1c g     O .bss	00000004 usb_midi_handleSongSelect
0002c6ac g     F .text.itcm	00000024 rtc_get
00026704 g     F .text.itcm	0000000c Adafruit_GFX::setTextSize(unsigned char)
00031618 g     F .text.itcm	00000078 frexp
000295ac g     F .text.itcm	00000004 pendablesrvreq_isr
000092ec  w    F .text.itcm	000001b8 BMCHelix::command(unsigned char, unsigned char, unsigned char)
0001aec4  w    F .text.itcm	00000060 BMCMidiMessage::prepareEditorMessage(unsigned char, unsigned char, unsigned char, unsigned char, unsigned short)
00024de8 g     F .text.itcm	00000038 BMCMidi::toggleCC(unsigned char, unsigned char, unsigned char)
000184dc  w    F .text.itcm	00000004 Print::availableForWrite()
20004c28 g     O .data	0000016c __global_locale
000277cc g     F .text.itcm	0000014c USBHost::new_Pipe(Device_struct*, unsigned long, unsigned long, unsigned long, unsigned long, unsigned long)
200040d4  w    O .data	0000001c vtable for MIDIDevice
2000b8bc g     O .bss	00000001 __lock___sfp_recursive_mutex
00025814 g     F .text.itcm	00000022 Adafruit_GFX::setRotation(unsigned char)
0002150c g     F .text.itcm	00000160 BMCEditor::globalBackupMessage(bool)
00029eac g     F .text.itcm	00000028 Print::printNumber(unsigned long, unsigned char, unsigned char)
0001280c  w    F .text.itcm	0000010c BMCButton::update()
0002b5bc g     F .text.itcm	00000064 usb_config_tx
0002ad54  w    F .text.itcm	00000006 _close
00001714  w    F .text.itcm	000001ac BMCBeatBuddy::update()
2000baf0 g     O .bss	00000004 usb_midi_handleActiveSensing
0002d814 g     F .text.itcm	00000010 free
00020d74 g     F .text.itcm	0000029c BMCEditor::connectEditor()
00030b24 g     F .text.itcm	000000a4 __multadd
00030b10 g     F .text.itcm	00000012 _Bfree
20005200  w    O .data	00000016 usb_string_serial_number
00024e70 g     F .text.itcm	00000060 BMC24LC256::BMC24LC256(BMC_eeprom_size_t, unsigned char, unsigned int, unsigned char)
000136f4 g     F .text.itcm	00000068 BMC::assignHardware()


